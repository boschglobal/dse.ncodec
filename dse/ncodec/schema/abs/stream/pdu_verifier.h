#ifndef PDU_VERIFIER_H
#define PDU_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef PDU_READER_H
#include "pdu_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_IpV4_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_IpV6_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_StructMetadata_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_Pdu_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Pdu_Stream_verify_table(flatcc_table_verifier_descriptor_t *td);

static int AutomotiveBus_Stream_Pdu_SocketAdapter_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table); /* do_ip */
    case 2: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table); /* some_ip */
    default: return flatcc_verify_ok;
    }
}

static int AutomotiveBus_Stream_Pdu_IpAddr_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_IpV4_verify_table); /* v4 */
    case 2: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_IpV6_verify_table); /* v6 */
    default: return flatcc_verify_ok;
    }
}

static int AutomotiveBus_Stream_Pdu_TransportMetadata_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table); /* Can */
    case 2: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table); /* Ip */
    case 3: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Pdu_StructMetadata_verify_table); /* Struct */
    default: return flatcc_verify_ok;
    }
}

static inline int AutomotiveBus_Stream_Pdu_IpAddressV6_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpAddressV6_identifier, 16, 2);
}

static inline int AutomotiveBus_Stream_Pdu_IpAddressV6_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpAddressV6_type_hash, 16, 2);
}

static inline int AutomotiveBus_Stream_Pdu_IpAddressV6_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 16, 2);
}

static inline int AutomotiveBus_Stream_Pdu_IpAddressV6_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 16, 2);
}

static int AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* message_format */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* frame_type */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* interface_id */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* network_id */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_CanMessageMetadata_identifier, &AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_CanMessageMetadata_type_identifier, &AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_CanMessageMetadata_verify_table);
}

static int AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* protocol_version */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* payload_type */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_DoIpMetadata_identifier, &AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_DoIpMetadata_type_identifier, &AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_DoIpMetadata_verify_table);
}

static int AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* message_id */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* length */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* request_id */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* protocol_version */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* interface_version */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* message_type */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 1, 1) /* return_code */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_SomeIpMetadata_identifier, &AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_SomeIpMetadata_type_identifier, &AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_SomeIpMetadata_verify_table);
}

static int AutomotiveBus_Stream_Pdu_IpV4_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* src_addr */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* dst_addr */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_IpV4_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpV4_identifier, &AutomotiveBus_Stream_Pdu_IpV4_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpV4_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpV4_type_identifier, &AutomotiveBus_Stream_Pdu_IpV4_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpV4_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_IpV4_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpV4_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_IpV4_verify_table);
}

static int AutomotiveBus_Stream_Pdu_IpV6_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 16, 2) /* src_addr */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 16, 2) /* dst_addr */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_IpV6_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpV6_identifier, &AutomotiveBus_Stream_Pdu_IpV6_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpV6_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpV6_type_identifier, &AutomotiveBus_Stream_Pdu_IpV6_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpV6_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_IpV6_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpV6_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_IpV6_verify_table);
}

static int AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* eth_dst_mac */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 8, 8) /* eth_src_mac */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* eth_ethertype */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* eth_tci_pcp */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* eth_tci_dei */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 2, 2) /* eth_tci_vid */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 7, 0, &AutomotiveBus_Stream_Pdu_IpAddr_union_verifier) /* ip_addr */)) return ret;
    if ((ret = flatcc_verify_field(td, 8, 1, 1) /* ip_protocol */)) return ret;
    if ((ret = flatcc_verify_field(td, 9, 2, 2) /* ip_src_port */)) return ret;
    if ((ret = flatcc_verify_field(td, 10, 2, 2) /* ip_dst_port */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 12, 0, &AutomotiveBus_Stream_Pdu_SocketAdapter_union_verifier) /* adapter */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpMessageMetadata_identifier, &AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_IpMessageMetadata_type_identifier, &AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_IpMessageMetadata_verify_table);
}

static int AutomotiveBus_Stream_Pdu_StructMetadata_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* type_name */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* var_name */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* encoding */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 2, 2) /* attribute_aligned */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* attribute_packed */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 5, 0) /* platform_arch */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 6, 0) /* platform_os */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 7, 0) /* platform_abi */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_StructMetadata_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_StructMetadata_identifier, &AutomotiveBus_Stream_Pdu_StructMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_StructMetadata_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_StructMetadata_type_identifier, &AutomotiveBus_Stream_Pdu_StructMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_StructMetadata_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_StructMetadata_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_StructMetadata_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_StructMetadata_verify_table);
}

static int AutomotiveBus_Stream_Pdu_Pdu_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* id */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* payload */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 3, 0, &AutomotiveBus_Stream_Pdu_TransportMetadata_union_verifier) /* transport */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 4, 4) /* swc_id */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 4, 4) /* ecu_id */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_Pdu_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_Pdu_identifier, &AutomotiveBus_Stream_Pdu_Pdu_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_Pdu_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_Pdu_type_identifier, &AutomotiveBus_Stream_Pdu_Pdu_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_Pdu_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_Pdu_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_Pdu_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_Pdu_verify_table);
}

static int AutomotiveBus_Stream_Pdu_Stream_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &AutomotiveBus_Stream_Pdu_Pdu_verify_table) /* pdus */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* node_uid */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Pdu_Stream_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_Stream_identifier, &AutomotiveBus_Stream_Pdu_Stream_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_Stream_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Pdu_Stream_type_identifier, &AutomotiveBus_Stream_Pdu_Stream_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_Stream_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Pdu_Stream_verify_table);
}

static inline int AutomotiveBus_Stream_Pdu_Stream_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Pdu_Stream_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* PDU_VERIFIER_H */
