#ifndef FRAME_VERIFIER_H
#define FRAME_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FRAME_READER_H
#include "frame_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int AutomotiveBus_Stream_Frame_Timing_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Frame_CanFrame_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Frame_Frame_verify_table(flatcc_table_verifier_descriptor_t *td);
static int AutomotiveBus_Stream_Frame_Stream_verify_table(flatcc_table_verifier_descriptor_t *td);

static int AutomotiveBus_Stream_Frame_FrameTypes_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, AutomotiveBus_Stream_Frame_CanFrame_verify_table); /* CanFrame */
    default: return flatcc_verify_ok;
    }
}

static int AutomotiveBus_Stream_Frame_Timing_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* send */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 8, 8) /* arbitration */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* recv */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Frame_Timing_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_Timing_identifier, &AutomotiveBus_Stream_Frame_Timing_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Timing_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_Timing_type_identifier, &AutomotiveBus_Stream_Frame_Timing_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Timing_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Frame_Timing_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Timing_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Frame_Timing_verify_table);
}

static int AutomotiveBus_Stream_Frame_CanFrame_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* frame_id */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* payload */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* frame_type */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 1, 1) /* bus_id */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 1, 1) /* node_id */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* interface_id */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 6, 0, &AutomotiveBus_Stream_Frame_Timing_verify_table) /* timing */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Frame_CanFrame_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_CanFrame_identifier, &AutomotiveBus_Stream_Frame_CanFrame_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_CanFrame_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_CanFrame_type_identifier, &AutomotiveBus_Stream_Frame_CanFrame_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_CanFrame_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Frame_CanFrame_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_CanFrame_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Frame_CanFrame_verify_table);
}

static int AutomotiveBus_Stream_Frame_Frame_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_field(td, 1, 0, &AutomotiveBus_Stream_Frame_FrameTypes_union_verifier) /* f */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Frame_Frame_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_Frame_identifier, &AutomotiveBus_Stream_Frame_Frame_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Frame_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_Frame_type_identifier, &AutomotiveBus_Stream_Frame_Frame_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Frame_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Frame_Frame_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Frame_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Frame_Frame_verify_table);
}

static int AutomotiveBus_Stream_Frame_Stream_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &AutomotiveBus_Stream_Frame_Frame_verify_table) /* frames */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* node_uid */)) return ret;
    return flatcc_verify_ok;
}

static inline int AutomotiveBus_Stream_Frame_Stream_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_Stream_identifier, &AutomotiveBus_Stream_Frame_Stream_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Stream_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, AutomotiveBus_Stream_Frame_Stream_type_identifier, &AutomotiveBus_Stream_Frame_Stream_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Stream_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &AutomotiveBus_Stream_Frame_Stream_verify_table);
}

static inline int AutomotiveBus_Stream_Frame_Stream_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &AutomotiveBus_Stream_Frame_Stream_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* FRAME_VERIFIER_H */
