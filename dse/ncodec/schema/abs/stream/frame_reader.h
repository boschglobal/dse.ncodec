#ifndef FRAME_READER_H
#define FRAME_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "SFRA"
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct AutomotiveBus_Stream_Frame_Timing_table *AutomotiveBus_Stream_Frame_Timing_table_t;
typedef struct AutomotiveBus_Stream_Frame_Timing_table *AutomotiveBus_Stream_Frame_Timing_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_Timing_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_Timing_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Frame_CanFrame_table *AutomotiveBus_Stream_Frame_CanFrame_table_t;
typedef struct AutomotiveBus_Stream_Frame_CanFrame_table *AutomotiveBus_Stream_Frame_CanFrame_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_CanFrame_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_CanFrame_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Frame_Frame_table *AutomotiveBus_Stream_Frame_Frame_table_t;
typedef struct AutomotiveBus_Stream_Frame_Frame_table *AutomotiveBus_Stream_Frame_Frame_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_Frame_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_Frame_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Frame_Stream_table *AutomotiveBus_Stream_Frame_Stream_table_t;
typedef struct AutomotiveBus_Stream_Frame_Stream_table *AutomotiveBus_Stream_Frame_Stream_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_Stream_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Frame_Stream_mutable_vec_t;
#ifndef AutomotiveBus_Stream_Frame_Timing_identifier
#define AutomotiveBus_Stream_Frame_Timing_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Frame_Timing_type_hash ((flatbuffers_thash_t)0xebcfea1)
#define AutomotiveBus_Stream_Frame_Timing_type_identifier "\xa1\xfe\xbc\x0e"
#ifndef AutomotiveBus_Stream_Frame_CanFrame_identifier
#define AutomotiveBus_Stream_Frame_CanFrame_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Frame_CanFrame_type_hash ((flatbuffers_thash_t)0xb7a52c80)
#define AutomotiveBus_Stream_Frame_CanFrame_type_identifier "\x80\x2c\xa5\xb7"
#ifndef AutomotiveBus_Stream_Frame_Frame_identifier
#define AutomotiveBus_Stream_Frame_Frame_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Frame_Frame_type_hash ((flatbuffers_thash_t)0x9d7b31cc)
#define AutomotiveBus_Stream_Frame_Frame_type_identifier "\xcc\x31\x7b\x9d"
#ifndef AutomotiveBus_Stream_Frame_Stream_identifier
#define AutomotiveBus_Stream_Frame_Stream_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Frame_Stream_type_hash ((flatbuffers_thash_t)0x56fbf557)
#define AutomotiveBus_Stream_Frame_Stream_type_identifier "\x57\xf5\xfb\x56"

typedef int8_t AutomotiveBus_Stream_Frame_CanFrameType_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Frame_CanFrameType, AutomotiveBus_Stream_Frame_CanFrameType_enum_t, 8)
#define AutomotiveBus_Stream_Frame_CanFrameType_BaseFrame ((AutomotiveBus_Stream_Frame_CanFrameType_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Frame_CanFrameType_ExtendedFrame ((AutomotiveBus_Stream_Frame_CanFrameType_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Frame_CanFrameType_FdBaseFrame ((AutomotiveBus_Stream_Frame_CanFrameType_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Frame_CanFrameType_FdExtendedFrame ((AutomotiveBus_Stream_Frame_CanFrameType_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Stream_Frame_CanFrameType_name(AutomotiveBus_Stream_Frame_CanFrameType_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Frame_CanFrameType_BaseFrame: return "BaseFrame";
    case AutomotiveBus_Stream_Frame_CanFrameType_ExtendedFrame: return "ExtendedFrame";
    case AutomotiveBus_Stream_Frame_CanFrameType_FdBaseFrame: return "FdBaseFrame";
    case AutomotiveBus_Stream_Frame_CanFrameType_FdExtendedFrame: return "FdExtendedFrame";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Frame_CanFrameType_is_known_value(AutomotiveBus_Stream_Frame_CanFrameType_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Frame_CanFrameType_BaseFrame: return 1;
    case AutomotiveBus_Stream_Frame_CanFrameType_ExtendedFrame: return 1;
    case AutomotiveBus_Stream_Frame_CanFrameType_FdBaseFrame: return 1;
    case AutomotiveBus_Stream_Frame_CanFrameType_FdExtendedFrame: return 1;
    default: return 0;
    }
}



struct AutomotiveBus_Stream_Frame_Timing_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Frame_Timing_vec_len(AutomotiveBus_Stream_Frame_Timing_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Frame_Timing_table_t AutomotiveBus_Stream_Frame_Timing_vec_at(AutomotiveBus_Stream_Frame_Timing_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Frame_Timing_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Frame_Timing)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Frame_Timing, send, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Frame_Timing, arbitration, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Frame_Timing, recv, flatbuffers_int64, int64_t, INT64_C(0))

struct AutomotiveBus_Stream_Frame_CanFrame_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Frame_CanFrame_vec_len(AutomotiveBus_Stream_Frame_CanFrame_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Frame_CanFrame_table_t AutomotiveBus_Stream_Frame_CanFrame_vec_at(AutomotiveBus_Stream_Frame_CanFrame_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Frame_CanFrame_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Frame_CanFrame)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Frame_CanFrame, frame_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(1, AutomotiveBus_Stream_Frame_CanFrame, payload, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Frame_CanFrame, frame_type, AutomotiveBus_Stream_Frame_CanFrameType, AutomotiveBus_Stream_Frame_CanFrameType_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Frame_CanFrame, bus_id, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Frame_CanFrame, node_id, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Frame_CanFrame, interface_id, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_table_field(6, AutomotiveBus_Stream_Frame_CanFrame, timing, AutomotiveBus_Stream_Frame_Timing_table_t, 0)
typedef uint8_t AutomotiveBus_Stream_Frame_FrameTypes_union_type_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Frame_FrameTypes, AutomotiveBus_Stream_Frame_FrameTypes_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, AutomotiveBus_Stream_Frame_FrameTypes)
#define AutomotiveBus_Stream_Frame_FrameTypes_NONE ((AutomotiveBus_Stream_Frame_FrameTypes_union_type_t)UINT8_C(0))
#define AutomotiveBus_Stream_Frame_FrameTypes_CanFrame ((AutomotiveBus_Stream_Frame_FrameTypes_union_type_t)UINT8_C(1))

static inline const char *AutomotiveBus_Stream_Frame_FrameTypes_type_name(AutomotiveBus_Stream_Frame_FrameTypes_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Frame_FrameTypes_NONE: return "NONE";
    case AutomotiveBus_Stream_Frame_FrameTypes_CanFrame: return "CanFrame";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Frame_FrameTypes_is_known_type(AutomotiveBus_Stream_Frame_FrameTypes_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Frame_FrameTypes_NONE: return 1;
    case AutomotiveBus_Stream_Frame_FrameTypes_CanFrame: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Stream_Frame_Frame_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Frame_Frame_vec_len(AutomotiveBus_Stream_Frame_Frame_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Frame_Frame_table_t AutomotiveBus_Stream_Frame_Frame_vec_at(AutomotiveBus_Stream_Frame_Frame_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Frame_Frame_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Frame_Frame)

__flatbuffers_define_union_field(flatbuffers_, 1, AutomotiveBus_Stream_Frame_Frame, f, AutomotiveBus_Stream_Frame_FrameTypes, 0)

struct AutomotiveBus_Stream_Frame_Stream_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Frame_Stream_vec_len(AutomotiveBus_Stream_Frame_Stream_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Frame_Stream_table_t AutomotiveBus_Stream_Frame_Stream_vec_at(AutomotiveBus_Stream_Frame_Stream_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Frame_Stream_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Frame_Stream)

__flatbuffers_define_vector_field(0, AutomotiveBus_Stream_Frame_Stream, frames, AutomotiveBus_Stream_Frame_Frame_vec_t, 0)
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Frame_Stream, node_uid, flatbuffers_uint32, uint32_t, UINT32_C(0))


#include "flatcc/flatcc_epilogue.h"
#endif /* FRAME_READER_H */
