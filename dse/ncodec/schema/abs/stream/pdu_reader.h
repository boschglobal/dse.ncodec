#ifndef PDU_READER_H
#define PDU_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "SPDU"
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef struct AutomotiveBus_Stream_Pdu_IpAddressV6 AutomotiveBus_Stream_Pdu_IpAddressV6_t;
typedef const AutomotiveBus_Stream_Pdu_IpAddressV6_t *AutomotiveBus_Stream_Pdu_IpAddressV6_struct_t;
typedef AutomotiveBus_Stream_Pdu_IpAddressV6_t *AutomotiveBus_Stream_Pdu_IpAddressV6_mutable_struct_t;
typedef const AutomotiveBus_Stream_Pdu_IpAddressV6_t *AutomotiveBus_Stream_Pdu_IpAddressV6_vec_t;
typedef AutomotiveBus_Stream_Pdu_IpAddressV6_t *AutomotiveBus_Stream_Pdu_IpAddressV6_mutable_vec_t;
typedef struct AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t;
typedef const AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_struct_t;
typedef AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_mutable_struct_t;
typedef const AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_vec_t;
typedef AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_mutable_vec_t;

typedef const struct AutomotiveBus_Stream_Pdu_CanMessageMetadata_table *AutomotiveBus_Stream_Pdu_CanMessageMetadata_table_t;
typedef struct AutomotiveBus_Stream_Pdu_CanMessageMetadata_table *AutomotiveBus_Stream_Pdu_CanMessageMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_CanMessageMetadata_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_CanMessageMetadata_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_DoIpMetadata_table *AutomotiveBus_Stream_Pdu_DoIpMetadata_table_t;
typedef struct AutomotiveBus_Stream_Pdu_DoIpMetadata_table *AutomotiveBus_Stream_Pdu_DoIpMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_DoIpMetadata_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_DoIpMetadata_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_SomeIpMetadata_table *AutomotiveBus_Stream_Pdu_SomeIpMetadata_table_t;
typedef struct AutomotiveBus_Stream_Pdu_SomeIpMetadata_table *AutomotiveBus_Stream_Pdu_SomeIpMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_SomeIpMetadata_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_SomeIpMetadata_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_IpV4_table *AutomotiveBus_Stream_Pdu_IpV4_table_t;
typedef struct AutomotiveBus_Stream_Pdu_IpV4_table *AutomotiveBus_Stream_Pdu_IpV4_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_IpV4_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_IpV4_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_IpV6_table *AutomotiveBus_Stream_Pdu_IpV6_table_t;
typedef struct AutomotiveBus_Stream_Pdu_IpV6_table *AutomotiveBus_Stream_Pdu_IpV6_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_IpV6_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_IpV6_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_IpMessageMetadata_table *AutomotiveBus_Stream_Pdu_IpMessageMetadata_table_t;
typedef struct AutomotiveBus_Stream_Pdu_IpMessageMetadata_table *AutomotiveBus_Stream_Pdu_IpMessageMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_IpMessageMetadata_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_IpMessageMetadata_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_StructMetadata_table *AutomotiveBus_Stream_Pdu_StructMetadata_table_t;
typedef struct AutomotiveBus_Stream_Pdu_StructMetadata_table *AutomotiveBus_Stream_Pdu_StructMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_StructMetadata_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_StructMetadata_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_FlexrayConfig_table *AutomotiveBus_Stream_Pdu_FlexrayConfig_table_t;
typedef struct AutomotiveBus_Stream_Pdu_FlexrayConfig_table *AutomotiveBus_Stream_Pdu_FlexrayConfig_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayConfig_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayConfig_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_FlexrayStatus_table *AutomotiveBus_Stream_Pdu_FlexrayStatus_table_t;
typedef struct AutomotiveBus_Stream_Pdu_FlexrayStatus_table *AutomotiveBus_Stream_Pdu_FlexrayStatus_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayStatus_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayStatus_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_FlexrayLpdu_table *AutomotiveBus_Stream_Pdu_FlexrayLpdu_table_t;
typedef struct AutomotiveBus_Stream_Pdu_FlexrayLpdu_table *AutomotiveBus_Stream_Pdu_FlexrayLpdu_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayLpdu_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayLpdu_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_table *AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_table_t;
typedef struct AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_table *AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_FlexrayMetadata_table *AutomotiveBus_Stream_Pdu_FlexrayMetadata_table_t;
typedef struct AutomotiveBus_Stream_Pdu_FlexrayMetadata_table *AutomotiveBus_Stream_Pdu_FlexrayMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayMetadata_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_FlexrayMetadata_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_Pdu_table *AutomotiveBus_Stream_Pdu_Pdu_table_t;
typedef struct AutomotiveBus_Stream_Pdu_Pdu_table *AutomotiveBus_Stream_Pdu_Pdu_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_Pdu_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_Pdu_mutable_vec_t;
typedef const struct AutomotiveBus_Stream_Pdu_Stream_table *AutomotiveBus_Stream_Pdu_Stream_table_t;
typedef struct AutomotiveBus_Stream_Pdu_Stream_table *AutomotiveBus_Stream_Pdu_Stream_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_Stream_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Stream_Pdu_Stream_mutable_vec_t;
#ifndef AutomotiveBus_Stream_Pdu_CanMessageMetadata_identifier
#define AutomotiveBus_Stream_Pdu_CanMessageMetadata_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_CanMessageMetadata_type_hash ((flatbuffers_thash_t)0x6be8c481)
#define AutomotiveBus_Stream_Pdu_CanMessageMetadata_type_identifier "\x81\xc4\xe8\x6b"
#ifndef AutomotiveBus_Stream_Pdu_DoIpMetadata_identifier
#define AutomotiveBus_Stream_Pdu_DoIpMetadata_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_DoIpMetadata_type_hash ((flatbuffers_thash_t)0xc6676dc0)
#define AutomotiveBus_Stream_Pdu_DoIpMetadata_type_identifier "\xc0\x6d\x67\xc6"
#ifndef AutomotiveBus_Stream_Pdu_SomeIpMetadata_identifier
#define AutomotiveBus_Stream_Pdu_SomeIpMetadata_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_SomeIpMetadata_type_hash ((flatbuffers_thash_t)0x72208e8d)
#define AutomotiveBus_Stream_Pdu_SomeIpMetadata_type_identifier "\x8d\x8e\x20\x72"
#ifndef AutomotiveBus_Stream_Pdu_IpAddressV6_identifier
#define AutomotiveBus_Stream_Pdu_IpAddressV6_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_IpAddressV6_type_hash ((flatbuffers_thash_t)0xf2618698)
#define AutomotiveBus_Stream_Pdu_IpAddressV6_type_identifier "\x98\x86\x61\xf2"
#ifndef AutomotiveBus_Stream_Pdu_IpV4_identifier
#define AutomotiveBus_Stream_Pdu_IpV4_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_IpV4_type_hash ((flatbuffers_thash_t)0x127585ee)
#define AutomotiveBus_Stream_Pdu_IpV4_type_identifier "\xee\x85\x75\x12"
#ifndef AutomotiveBus_Stream_Pdu_IpV6_identifier
#define AutomotiveBus_Stream_Pdu_IpV6_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_IpV6_type_hash ((flatbuffers_thash_t)0x107582c8)
#define AutomotiveBus_Stream_Pdu_IpV6_type_identifier "\xc8\x82\x75\x10"
#ifndef AutomotiveBus_Stream_Pdu_IpMessageMetadata_identifier
#define AutomotiveBus_Stream_Pdu_IpMessageMetadata_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_IpMessageMetadata_type_hash ((flatbuffers_thash_t)0x74949a76)
#define AutomotiveBus_Stream_Pdu_IpMessageMetadata_type_identifier "\x76\x9a\x94\x74"
#ifndef AutomotiveBus_Stream_Pdu_StructMetadata_identifier
#define AutomotiveBus_Stream_Pdu_StructMetadata_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_StructMetadata_type_hash ((flatbuffers_thash_t)0xfb3efb95)
#define AutomotiveBus_Stream_Pdu_StructMetadata_type_identifier "\x95\xfb\x3e\xfb"
#ifndef AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_identifier
#define AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_type_hash ((flatbuffers_thash_t)0x739b2559)
#define AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_type_identifier "\x59\x25\x9b\x73"
#ifndef AutomotiveBus_Stream_Pdu_FlexrayConfig_identifier
#define AutomotiveBus_Stream_Pdu_FlexrayConfig_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_FlexrayConfig_type_hash ((flatbuffers_thash_t)0xbdea918)
#define AutomotiveBus_Stream_Pdu_FlexrayConfig_type_identifier "\x18\xa9\xde\x0b"
#ifndef AutomotiveBus_Stream_Pdu_FlexrayStatus_identifier
#define AutomotiveBus_Stream_Pdu_FlexrayStatus_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_FlexrayStatus_type_hash ((flatbuffers_thash_t)0xa4e2cdf0)
#define AutomotiveBus_Stream_Pdu_FlexrayStatus_type_identifier "\xf0\xcd\xe2\xa4"
#ifndef AutomotiveBus_Stream_Pdu_FlexrayLpdu_identifier
#define AutomotiveBus_Stream_Pdu_FlexrayLpdu_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_FlexrayLpdu_type_hash ((flatbuffers_thash_t)0x6f822405)
#define AutomotiveBus_Stream_Pdu_FlexrayLpdu_type_identifier "\x05\x24\x82\x6f"
#ifndef AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_identifier
#define AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_type_hash ((flatbuffers_thash_t)0x2fb09b27)
#define AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_type_identifier "\x27\x9b\xb0\x2f"
#ifndef AutomotiveBus_Stream_Pdu_FlexrayMetadata_identifier
#define AutomotiveBus_Stream_Pdu_FlexrayMetadata_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_FlexrayMetadata_type_hash ((flatbuffers_thash_t)0xbfb974db)
#define AutomotiveBus_Stream_Pdu_FlexrayMetadata_type_identifier "\xdb\x74\xb9\xbf"
#ifndef AutomotiveBus_Stream_Pdu_Pdu_identifier
#define AutomotiveBus_Stream_Pdu_Pdu_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_Pdu_type_hash ((flatbuffers_thash_t)0x8ce9f61c)
#define AutomotiveBus_Stream_Pdu_Pdu_type_identifier "\x1c\xf6\xe9\x8c"
#ifndef AutomotiveBus_Stream_Pdu_Stream_identifier
#define AutomotiveBus_Stream_Pdu_Stream_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Stream_Pdu_Stream_type_hash ((flatbuffers_thash_t)0x2383c95)
#define AutomotiveBus_Stream_Pdu_Stream_type_identifier "\x95\x3c\x38\x02"

/** 
 *     CAN Message Metadata
 *     -------------------- */
typedef int8_t AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_CanMessageFormat, AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t, 8)
/**  CAN Base Format (pdu.id is 11-bits). */
#define AutomotiveBus_Stream_Pdu_CanMessageFormat_BaseFrameFormat ((AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_CanMessageFormat_ExtendedFrameFormat ((AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_CanMessageFormat_FdBaseFrameFormat ((AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_CanMessageFormat_FdExtendedFrameFormat ((AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Stream_Pdu_CanMessageFormat_name(AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_BaseFrameFormat: return "BaseFrameFormat";
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_ExtendedFrameFormat: return "ExtendedFrameFormat";
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_FdBaseFrameFormat: return "FdBaseFrameFormat";
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_FdExtendedFrameFormat: return "FdExtendedFrameFormat";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_CanMessageFormat_is_known_value(AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_BaseFrameFormat: return 1;
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_ExtendedFrameFormat: return 1;
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_FdBaseFrameFormat: return 1;
    case AutomotiveBus_Stream_Pdu_CanMessageFormat_FdExtendedFrameFormat: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_CanFrameType_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_CanFrameType, AutomotiveBus_Stream_Pdu_CanFrameType_enum_t, 8)
/**  CAN Data Frame. */
#define AutomotiveBus_Stream_Pdu_CanFrameType_DataFrame ((AutomotiveBus_Stream_Pdu_CanFrameType_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_CanFrameType_RemoteFrame ((AutomotiveBus_Stream_Pdu_CanFrameType_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_CanFrameType_ErrorFrame ((AutomotiveBus_Stream_Pdu_CanFrameType_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_CanFrameType_OverloadFrame ((AutomotiveBus_Stream_Pdu_CanFrameType_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Stream_Pdu_CanFrameType_name(AutomotiveBus_Stream_Pdu_CanFrameType_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_CanFrameType_DataFrame: return "DataFrame";
    case AutomotiveBus_Stream_Pdu_CanFrameType_RemoteFrame: return "RemoteFrame";
    case AutomotiveBus_Stream_Pdu_CanFrameType_ErrorFrame: return "ErrorFrame";
    case AutomotiveBus_Stream_Pdu_CanFrameType_OverloadFrame: return "OverloadFrame";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_CanFrameType_is_known_value(AutomotiveBus_Stream_Pdu_CanFrameType_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_CanFrameType_DataFrame: return 1;
    case AutomotiveBus_Stream_Pdu_CanFrameType_RemoteFrame: return 1;
    case AutomotiveBus_Stream_Pdu_CanFrameType_ErrorFrame: return 1;
    case AutomotiveBus_Stream_Pdu_CanFrameType_OverloadFrame: return 1;
    default: return 0;
    }
}

typedef uint8_t AutomotiveBus_Stream_Pdu_IpProtocol_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_IpProtocol, AutomotiveBus_Stream_Pdu_IpProtocol_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_IpProtocol_None ((AutomotiveBus_Stream_Pdu_IpProtocol_enum_t)UINT8_C(0))
#define AutomotiveBus_Stream_Pdu_IpProtocol_Tcp ((AutomotiveBus_Stream_Pdu_IpProtocol_enum_t)UINT8_C(6))
#define AutomotiveBus_Stream_Pdu_IpProtocol_Udp ((AutomotiveBus_Stream_Pdu_IpProtocol_enum_t)UINT8_C(17))

static inline const char *AutomotiveBus_Stream_Pdu_IpProtocol_name(AutomotiveBus_Stream_Pdu_IpProtocol_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_IpProtocol_None: return "None";
    case AutomotiveBus_Stream_Pdu_IpProtocol_Tcp: return "Tcp";
    case AutomotiveBus_Stream_Pdu_IpProtocol_Udp: return "Udp";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_IpProtocol_is_known_value(AutomotiveBus_Stream_Pdu_IpProtocol_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_IpProtocol_None: return 1;
    case AutomotiveBus_Stream_Pdu_IpProtocol_Tcp: return 1;
    case AutomotiveBus_Stream_Pdu_IpProtocol_Udp: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayBitrate, AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayBitrate_None ((AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR10Mbps ((AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR5Mbps ((AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR2_5Mbps ((AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayBitrate_name(AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR10Mbps: return "BR10Mbps";
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR5Mbps: return "BR5Mbps";
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR2_5Mbps: return "BR2_5Mbps";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayBitrate_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR10Mbps: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR5Mbps: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayBitrate_BR2_5Mbps: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayDirection, AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayDirection_None ((AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayDirection_Rx ((AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayDirection_Tx ((AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t)INT8_C(2))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayDirection_name(AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayDirection_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayDirection_Rx: return "Rx";
    case AutomotiveBus_Stream_Pdu_FlexrayDirection_Tx: return "Tx";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayDirection_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayDirection_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayDirection_Rx: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayDirection_Tx: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayTransmitMode, AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_None ((AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_Continuous ((AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_SingleShot ((AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t)INT8_C(2))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_name(AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_Continuous: return "Continuous";
    case AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_SingleShot: return "SingleShot";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_Continuous: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_SingleShot: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayChannel, AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayChannel_None ((AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayChannel_A ((AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayChannel_B ((AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayChannel_AB ((AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayChannel_name(AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_A: return "A";
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_B: return "B";
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_AB: return "AB";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayChannel_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_A: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_B: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayChannel_AB: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayChannelStatus, AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_A ((AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_B ((AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_name(AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_A: return "A";
    case AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_B: return "B";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_A: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayChannelStatus_B: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayTransceiverState, AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_None ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoPower ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoConnection ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoSignal ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(3))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_CAS ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(4))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_WUP ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(5))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_FrameSync ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(6))
#define AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_FrameError ((AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t)INT8_C(7))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_name(AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoPower: return "NoPower";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoConnection: return "NoConnection";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoSignal: return "NoSignal";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_CAS: return "CAS";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_WUP: return "WUP";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_FrameSync: return "FrameSync";
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_FrameError: return "FrameError";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoPower: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoConnection: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_NoSignal: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_CAS: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_WUP: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_FrameSync: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_FrameError: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayPocState, AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_DefaultConfig ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_Config ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_Ready ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_Wakeup ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(3))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_Startup ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(4))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_NormalActive ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(5))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_NormalPassive ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(6))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_StateHalt ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(7))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_Freeze ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(8))
#define AutomotiveBus_Stream_Pdu_FlexrayPocState_Undefined ((AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t)INT8_C(9))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayPocState_name(AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_DefaultConfig: return "DefaultConfig";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Config: return "Config";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Ready: return "Ready";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Wakeup: return "Wakeup";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Startup: return "Startup";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_NormalActive: return "NormalActive";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_NormalPassive: return "NormalPassive";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_StateHalt: return "StateHalt";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Freeze: return "Freeze";
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Undefined: return "Undefined";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayPocState_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_DefaultConfig: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Config: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Ready: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Wakeup: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Startup: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_NormalActive: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_NormalPassive: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_StateHalt: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Freeze: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocState_Undefined: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayPocCommand, AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_None ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Config ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Ready ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Wakeup ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(3))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Run ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(4))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_AllSlots ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(5))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Halt ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(6))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Freeze ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(7))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Coldstart ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(8))
#define AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Nop ((AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t)INT8_C(9))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayPocCommand_name(AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Config: return "Config";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Ready: return "Ready";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Wakeup: return "Wakeup";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Run: return "Run";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_AllSlots: return "AllSlots";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Halt: return "Halt";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Freeze: return "Freeze";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Coldstart: return "Coldstart";
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Nop: return "Nop";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayPocCommand_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Config: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Ready: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Wakeup: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Run: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_AllSlots: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Halt: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Freeze: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Coldstart: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayPocCommand_Nop: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayLpduStatus, AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_None ((AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_Transmitted ((AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_NotTransmitted ((AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_Received ((AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t)INT8_C(3))
#define AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_NotReceived ((AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t)INT8_C(4))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_name(AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_None: return "None";
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_Transmitted: return "Transmitted";
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_NotTransmitted: return "NotTransmitted";
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_Received: return "Received";
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_NotReceived: return "NotReceived";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_None: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_Transmitted: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_NotTransmitted: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_Received: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_NotReceived: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayConfigOp, AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t, 8)
#define AutomotiveBus_Stream_Pdu_FlexrayConfigOp_Set ((AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t)INT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableSet ((AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t)INT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableMerge ((AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t)INT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableDelete ((AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayConfigOp_name(AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_Set: return "Set";
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableSet: return "FrameTableSet";
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableMerge: return "FrameTableMerge";
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableDelete: return "FrameTableDelete";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayConfigOp_is_known_value(AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_Set: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableSet: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableMerge: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayConfigOp_FrameTableDelete: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Stream_Pdu_IpAddressV6 {
    alignas(2) uint16_t v0;
    alignas(2) uint16_t v1;
    alignas(2) uint16_t v2;
    alignas(2) uint16_t v3;
    alignas(2) uint16_t v4;
    alignas(2) uint16_t v5;
    alignas(2) uint16_t v6;
    alignas(2) uint16_t v7;
};
static_assert(sizeof(AutomotiveBus_Stream_Pdu_IpAddressV6_t) == 16, "struct size mismatch");

static inline const AutomotiveBus_Stream_Pdu_IpAddressV6_t *AutomotiveBus_Stream_Pdu_IpAddressV6__const_ptr_add(const AutomotiveBus_Stream_Pdu_IpAddressV6_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Stream_Pdu_IpAddressV6_t *AutomotiveBus_Stream_Pdu_IpAddressV6__ptr_add(AutomotiveBus_Stream_Pdu_IpAddressV6_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Stream_Pdu_IpAddressV6_struct_t AutomotiveBus_Stream_Pdu_IpAddressV6_vec_at(AutomotiveBus_Stream_Pdu_IpAddressV6_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t AutomotiveBus_Stream_Pdu_IpAddressV6__size(void) { return 16; }
static inline size_t AutomotiveBus_Stream_Pdu_IpAddressV6_vec_len(AutomotiveBus_Stream_Pdu_IpAddressV6_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(AutomotiveBus_Stream_Pdu_IpAddressV6)

__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v0, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v1, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v2, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v3, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v4, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v5, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v6, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_IpAddressV6, v7, flatbuffers_uint16, uint16_t)

/** 
 *     FlexRay Tables
 *     -------------- */
struct AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier {
    alignas(4) uint16_t ecu_id;
    alignas(2) uint16_t cc_id;
    alignas(4) uint32_t swc_id;
};
static_assert(sizeof(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t) == 8, "struct size mismatch");

static inline const AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier__const_ptr_add(const AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier__ptr_add(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_struct_t AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_vec_at(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier__size(void) { return 8; }
static inline size_t AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_vec_len(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier)

__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier, ecu_id, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier, cc_id, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier, swc_id, flatbuffers_uint32, uint32_t)


struct AutomotiveBus_Stream_Pdu_CanMessageMetadata_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_CanMessageMetadata_vec_len(AutomotiveBus_Stream_Pdu_CanMessageMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_CanMessageMetadata_table_t AutomotiveBus_Stream_Pdu_CanMessageMetadata_vec_at(AutomotiveBus_Stream_Pdu_CanMessageMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_CanMessageMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_CanMessageMetadata)

/**  CAN: Message Format. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_CanMessageMetadata, message_format, AutomotiveBus_Stream_Pdu_CanMessageFormat, AutomotiveBus_Stream_Pdu_CanMessageFormat_enum_t, INT8_C(0))
/**  CAN: Frame Type. */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_CanMessageMetadata, frame_type, AutomotiveBus_Stream_Pdu_CanFrameType, AutomotiveBus_Stream_Pdu_CanFrameType_enum_t, INT8_C(0))
/**  CAN: Interface ID of the Interface _sending_ this PDU. */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_CanMessageMetadata, interface_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  CAN: Network ID of the network that _carries_ this PDU. */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_CanMessageMetadata, network_id, flatbuffers_uint32, uint32_t, UINT32_C(0))

/** 
 *     Socket Adapter Metadata
 *     ----------------------- */
struct AutomotiveBus_Stream_Pdu_DoIpMetadata_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_DoIpMetadata_vec_len(AutomotiveBus_Stream_Pdu_DoIpMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_DoIpMetadata_table_t AutomotiveBus_Stream_Pdu_DoIpMetadata_vec_at(AutomotiveBus_Stream_Pdu_DoIpMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_DoIpMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_DoIpMetadata)

/**  DoIP: Protocol Version. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_DoIpMetadata, protocol_version, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  DoIP: Payload Type. */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_DoIpMetadata, payload_type, flatbuffers_uint16, uint16_t, UINT16_C(0))

struct AutomotiveBus_Stream_Pdu_SomeIpMetadata_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_SomeIpMetadata_vec_len(AutomotiveBus_Stream_Pdu_SomeIpMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_SomeIpMetadata_table_t AutomotiveBus_Stream_Pdu_SomeIpMetadata_vec_at(AutomotiveBus_Stream_Pdu_SomeIpMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_SomeIpMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_SomeIpMetadata)

/**  SOME/IP: Message ID. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_SomeIpMetadata, message_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  SOME/IP: Message Length. */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_SomeIpMetadata, length, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  SOME/IP: Request ID. */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_SomeIpMetadata, request_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  SOME/IP: Protocol Version. */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_SomeIpMetadata, protocol_version, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  SOME/IP: Interface Version. */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_SomeIpMetadata, interface_version, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  SOME/IP: Message Type. */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_SomeIpMetadata, message_type, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  SOME/IP: Return code. */
__flatbuffers_define_scalar_field(6, AutomotiveBus_Stream_Pdu_SomeIpMetadata, return_code, flatbuffers_uint8, uint8_t, UINT8_C(0))
typedef uint8_t AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_SocketAdapter, AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, AutomotiveBus_Stream_Pdu_SocketAdapter)
/** 
 *     IP Message Metadata
 *     ------------------- */
#define AutomotiveBus_Stream_Pdu_SocketAdapter_NONE ((AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t)UINT8_C(0))
/**  DoIp: Diagnostic Communication over Internet Protocol. */
#define AutomotiveBus_Stream_Pdu_SocketAdapter_do_ip ((AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t)UINT8_C(1))
#define AutomotiveBus_Stream_Pdu_SocketAdapter_some_ip ((AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t)UINT8_C(2))

static inline const char *AutomotiveBus_Stream_Pdu_SocketAdapter_type_name(AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_SocketAdapter_NONE: return "NONE";
    case AutomotiveBus_Stream_Pdu_SocketAdapter_do_ip: return "do_ip";
    case AutomotiveBus_Stream_Pdu_SocketAdapter_some_ip: return "some_ip";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_SocketAdapter_is_known_type(AutomotiveBus_Stream_Pdu_SocketAdapter_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_SocketAdapter_NONE: return 1;
    case AutomotiveBus_Stream_Pdu_SocketAdapter_do_ip: return 1;
    case AutomotiveBus_Stream_Pdu_SocketAdapter_some_ip: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Stream_Pdu_IpV4_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_IpV4_vec_len(AutomotiveBus_Stream_Pdu_IpV4_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_IpV4_table_t AutomotiveBus_Stream_Pdu_IpV4_vec_at(AutomotiveBus_Stream_Pdu_IpV4_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_IpV4_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_IpV4)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_IpV4, src_addr, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_IpV4, dst_addr, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct AutomotiveBus_Stream_Pdu_IpV6_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_IpV6_vec_len(AutomotiveBus_Stream_Pdu_IpV6_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_IpV6_table_t AutomotiveBus_Stream_Pdu_IpV6_vec_at(AutomotiveBus_Stream_Pdu_IpV6_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_IpV6_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_IpV6)

__flatbuffers_define_struct_field(0, AutomotiveBus_Stream_Pdu_IpV6, src_addr, AutomotiveBus_Stream_Pdu_IpAddressV6_struct_t, 0)
__flatbuffers_define_struct_field(1, AutomotiveBus_Stream_Pdu_IpV6, dst_addr, AutomotiveBus_Stream_Pdu_IpAddressV6_struct_t, 0)
typedef uint8_t AutomotiveBus_Stream_Pdu_IpAddr_union_type_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_IpAddr, AutomotiveBus_Stream_Pdu_IpAddr_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, AutomotiveBus_Stream_Pdu_IpAddr)
#define AutomotiveBus_Stream_Pdu_IpAddr_NONE ((AutomotiveBus_Stream_Pdu_IpAddr_union_type_t)UINT8_C(0))
#define AutomotiveBus_Stream_Pdu_IpAddr_v4 ((AutomotiveBus_Stream_Pdu_IpAddr_union_type_t)UINT8_C(1))
#define AutomotiveBus_Stream_Pdu_IpAddr_v6 ((AutomotiveBus_Stream_Pdu_IpAddr_union_type_t)UINT8_C(2))

static inline const char *AutomotiveBus_Stream_Pdu_IpAddr_type_name(AutomotiveBus_Stream_Pdu_IpAddr_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_IpAddr_NONE: return "NONE";
    case AutomotiveBus_Stream_Pdu_IpAddr_v4: return "v4";
    case AutomotiveBus_Stream_Pdu_IpAddr_v6: return "v6";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_IpAddr_is_known_type(AutomotiveBus_Stream_Pdu_IpAddr_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_IpAddr_NONE: return 1;
    case AutomotiveBus_Stream_Pdu_IpAddr_v4: return 1;
    case AutomotiveBus_Stream_Pdu_IpAddr_v6: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Stream_Pdu_IpMessageMetadata_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_IpMessageMetadata_vec_len(AutomotiveBus_Stream_Pdu_IpMessageMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_IpMessageMetadata_table_t AutomotiveBus_Stream_Pdu_IpMessageMetadata_vec_at(AutomotiveBus_Stream_Pdu_IpMessageMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_IpMessageMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_IpMessageMetadata)

/** 
 *         Ethernet (IEEE 802.1Q)
 *         ----------------------
 *     
 *  Ethernet: Destination MAC (stored in lower 48-bits, transmission order).
 *   example: uint64 := XX-XX-01-23-45-67-89-AB */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_IpMessageMetadata, eth_dst_mac, flatbuffers_uint64, uint64_t, UINT64_C(0))
/**  Ethernet: Source MAC (stored in lower 48-bits, transmission order).
 *   example: uint64 := XX-XX-01-23-45-67-89-AB */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_IpMessageMetadata, eth_src_mac, flatbuffers_uint64, uint64_t, UINT64_C(0))
/**  Ethernet: EtherType. */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_IpMessageMetadata, eth_ethertype, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Ethernet: TCI: Priority code point. */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_IpMessageMetadata, eth_tci_pcp, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Ethernet: TCI: Drop eligible indicator. */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_IpMessageMetadata, eth_tci_dei, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Ethernet: TCI: VLAN identifier. */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_IpMessageMetadata, eth_tci_vid, flatbuffers_uint16, uint16_t, UINT16_C(0))
/** 
 *         IP Protocols
 *         ------------
 *     
 *  IP: Address. */
__flatbuffers_define_union_field(flatbuffers_, 7, AutomotiveBus_Stream_Pdu_IpMessageMetadata, ip_addr, AutomotiveBus_Stream_Pdu_IpAddr, 0)
/**  IP: Protocol Specifier. */
__flatbuffers_define_scalar_field(8, AutomotiveBus_Stream_Pdu_IpMessageMetadata, ip_protocol, AutomotiveBus_Stream_Pdu_IpProtocol, AutomotiveBus_Stream_Pdu_IpProtocol_enum_t, UINT8_C(0))
/**  IP: TCP/UDP Source Port. */
__flatbuffers_define_scalar_field(9, AutomotiveBus_Stream_Pdu_IpMessageMetadata, ip_src_port, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  IP: TCP/UDP Destination Port. */
__flatbuffers_define_scalar_field(10, AutomotiveBus_Stream_Pdu_IpMessageMetadata, ip_dst_port, flatbuffers_uint16, uint16_t, UINT16_C(0))
/** 
 *         Adapter Protocols
 *         -----------------
 *      */
__flatbuffers_define_union_field(flatbuffers_, 12, AutomotiveBus_Stream_Pdu_IpMessageMetadata, adapter, AutomotiveBus_Stream_Pdu_SocketAdapter, 0)

/** 
 *     Struct Metadata
 *     --------------- */
struct AutomotiveBus_Stream_Pdu_StructMetadata_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_StructMetadata_vec_len(AutomotiveBus_Stream_Pdu_StructMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_StructMetadata_table_t AutomotiveBus_Stream_Pdu_StructMetadata_vec_at(AutomotiveBus_Stream_Pdu_StructMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_StructMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_StructMetadata)

/**  Struct: Name of the struct type. */
__flatbuffers_define_string_field(0, AutomotiveBus_Stream_Pdu_StructMetadata, type_name, 0)
/**  Struct: Name of the struct instance/variable. */
__flatbuffers_define_string_field(1, AutomotiveBus_Stream_Pdu_StructMetadata, var_name, 0)
/**  Struct: Encoding used to package the struct instance/variable (default is 'memcpy'). */
__flatbuffers_define_string_field(2, AutomotiveBus_Stream_Pdu_StructMetadata, encoding, 0)
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_StructMetadata, attribute_aligned, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_StructMetadata, attribute_packed, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_string_field(5, AutomotiveBus_Stream_Pdu_StructMetadata, platform_arch, 0)
__flatbuffers_define_string_field(6, AutomotiveBus_Stream_Pdu_StructMetadata, platform_os, 0)
__flatbuffers_define_string_field(7, AutomotiveBus_Stream_Pdu_StructMetadata, platform_abi, 0)

/** 
 *     FlexRay Config Metadata
 *     ----------------------- */
struct AutomotiveBus_Stream_Pdu_FlexrayConfig_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_FlexrayConfig_vec_len(AutomotiveBus_Stream_Pdu_FlexrayConfig_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_FlexrayConfig_table_t AutomotiveBus_Stream_Pdu_FlexrayConfig_vec_at(AutomotiveBus_Stream_Pdu_FlexrayConfig_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_FlexrayConfig_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_FlexrayConfig)

/** 
 *         Node Config Properties (Codec internal)
 *         ----------------------
 *     
 *  Config: Node configured Virtual Coldstart Nodes. */
__flatbuffers_define_vector_field(0, AutomotiveBus_Stream_Pdu_FlexrayConfig, vcn, AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_vec_t, 0)
/** 
 *         FlexRay Controller Properties
 *         -----------------------------
 *     
 *  Config: Macroticks per communication cycle (10..16000 MT). */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_FlexrayConfig, macrotick_per_cycle, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Microticks per communication cycle (640..640000 uT). */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_FlexrayConfig, microtick_per_cycle, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  Config: Start of network idle, marks start-of-end of communication cycle (7..15997 MT). */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_FlexrayConfig, network_idle_start, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Length of a static slot (4..659 MT). */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_FlexrayConfig, static_slot_length, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Number of static slots (2..1023). */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_FlexrayConfig, static_slot_count, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Length of a mimi slot (2..63 MT). */
__flatbuffers_define_scalar_field(6, AutomotiveBus_Stream_Pdu_FlexrayConfig, minislot_length, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Config: Number of mini slots (0..7986). */
__flatbuffers_define_scalar_field(7, AutomotiveBus_Stream_Pdu_FlexrayConfig, minislot_count, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Static segment payload length (0..254 bytes). */
__flatbuffers_define_scalar_field(8, AutomotiveBus_Stream_Pdu_FlexrayConfig, static_slot_payload_length, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  Config: The FlexRay bitrate. */
__flatbuffers_define_scalar_field(9, AutomotiveBus_Stream_Pdu_FlexrayConfig, bit_rate, AutomotiveBus_Stream_Pdu_FlexrayBitrate, AutomotiveBus_Stream_Pdu_FlexrayBitrate_enum_t, INT8_C(0))
/**  Config: Channels enabled. */
__flatbuffers_define_scalar_field(10, AutomotiveBus_Stream_Pdu_FlexrayConfig, channel_enable, AutomotiveBus_Stream_Pdu_FlexrayChannel, AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t, INT8_C(0))
/** 
 *         Coldstart & Sync Config Properties
 *         ----------------------------------
 *     
 *  Config: Coldstart node (1=yes, 0=no). */
__flatbuffers_define_scalar_field(11, AutomotiveBus_Stream_Pdu_FlexrayConfig, coldstart_node, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Config: Sync node (1=yes, 0=no). */
__flatbuffers_define_scalar_field(12, AutomotiveBus_Stream_Pdu_FlexrayConfig, sync_node, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Config: Coldstart attempts (2..31). */
__flatbuffers_define_scalar_field(13, AutomotiveBus_Stream_Pdu_FlexrayConfig, coldstart_attempts, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Config: Wakeup channel selector (0=A, 1=B). */
__flatbuffers_define_scalar_field(14, AutomotiveBus_Stream_Pdu_FlexrayConfig, wakeup_channel_select, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Config: Startup in single slot mode. */
__flatbuffers_define_scalar_field(15, AutomotiveBus_Stream_Pdu_FlexrayConfig, single_slot_enabled, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Config: Key slot id (for simplified startup). */
__flatbuffers_define_scalar_field(16, AutomotiveBus_Stream_Pdu_FlexrayConfig, key_slot_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Key slot Payload (related to LPDU). */
__flatbuffers_define_vector_field(17, AutomotiveBus_Stream_Pdu_FlexrayConfig, key_slot_payload, flatbuffers_uint8_vec_t, 0)
/**  Config: Key slot LPDU (for startup with payload). */
__flatbuffers_define_table_field(18, AutomotiveBus_Stream_Pdu_FlexrayConfig, key_slot_lpdu, AutomotiveBus_Stream_Pdu_FlexrayLpdu_table_t, 0)
/** 
 *         Frame Config Table
 *         ------------------
 *     
 *  Config: Frame/LPDU static config table. */
__flatbuffers_define_vector_field(19, AutomotiveBus_Stream_Pdu_FlexrayConfig, frame_table, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_vec_t, 0)
/**  Config: Config operation, relates specifically to 'frame_table'. */
__flatbuffers_define_scalar_field(20, AutomotiveBus_Stream_Pdu_FlexrayConfig, config_op, AutomotiveBus_Stream_Pdu_FlexrayConfigOp, AutomotiveBus_Stream_Pdu_FlexrayConfigOp_enum_t, INT8_C(0))

/** 
 *     FlexRay Status Metadata
 *     ----------------------- */
struct AutomotiveBus_Stream_Pdu_FlexrayStatus_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_FlexrayStatus_vec_len(AutomotiveBus_Stream_Pdu_FlexrayStatus_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_FlexrayStatus_table_t AutomotiveBus_Stream_Pdu_FlexrayStatus_vec_at(AutomotiveBus_Stream_Pdu_FlexrayStatus_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_FlexrayStatus_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_FlexrayStatus)

/**  Status: The macrotick (MT) associated with the containing PDU Stream Object. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_FlexrayStatus, macrotick, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Status: The cycle count associated with the containing PDU Stream Object. */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_FlexrayStatus, cycle, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_FlexrayStatus, reserved, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Status: Channel A: Transceiver State. */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_FlexrayStatus, tcvr_state_cha, AutomotiveBus_Stream_Pdu_FlexrayTransceiverState, AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t, INT8_C(0))
/**  Status: Channel B: Transceiver State. */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_FlexrayStatus, tcvr_state_chb, AutomotiveBus_Stream_Pdu_FlexrayTransceiverState, AutomotiveBus_Stream_Pdu_FlexrayTransceiverState_enum_t, INT8_C(0))
/**  Status: Channel A: State of the FlexRay POC. */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_FlexrayStatus, poc_state_cha, AutomotiveBus_Stream_Pdu_FlexrayPocState, AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t, INT8_C(0))
/**  Status: Channel B: State of the FlexRay POC. */
__flatbuffers_define_scalar_field(6, AutomotiveBus_Stream_Pdu_FlexrayStatus, poc_state_chb, AutomotiveBus_Stream_Pdu_FlexrayPocState, AutomotiveBus_Stream_Pdu_FlexrayPocState_enum_t, INT8_C(0))
/**  Status: Channel A: A POC command. */
__flatbuffers_define_scalar_field(7, AutomotiveBus_Stream_Pdu_FlexrayStatus, poc_command_cha, AutomotiveBus_Stream_Pdu_FlexrayPocCommand, AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t, INT8_C(0))
/**  Status: Channel B: A POC command. */
__flatbuffers_define_scalar_field(8, AutomotiveBus_Stream_Pdu_FlexrayStatus, poc_command_chb, AutomotiveBus_Stream_Pdu_FlexrayPocCommand, AutomotiveBus_Stream_Pdu_FlexrayPocCommand_enum_t, INT8_C(0))

/** 
 *     FlexRay LPDU Metadata
 *     --------------------- */
struct AutomotiveBus_Stream_Pdu_FlexrayLpdu_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_FlexrayLpdu_vec_len(AutomotiveBus_Stream_Pdu_FlexrayLpdu_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_FlexrayLpdu_table_t AutomotiveBus_Stream_Pdu_FlexrayLpdu_vec_at(AutomotiveBus_Stream_Pdu_FlexrayLpdu_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_FlexrayLpdu_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_FlexrayLpdu)

/**  Frame: Cycle the frame was received on. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_FlexrayLpdu, cycle, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Frame: Index into Frame Config table. */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_FlexrayLpdu, frame_config_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Frame: The frame header has the 'Null Frame' indicator set. */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_FlexrayLpdu, null_frame, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Frame: The frame header has the 'Null Frame' indicator set. */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_FlexrayLpdu, sync_frame, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Frame: The frame header has the 'Null Frame' indicator set. */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_FlexrayLpdu, startup_frame, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Frame: The frame header has the 'Null Frame' indicator set. */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_FlexrayLpdu, payload_preamble, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
/**  Frame: Status of this frame (actual/observed status). */
__flatbuffers_define_scalar_field(6, AutomotiveBus_Stream_Pdu_FlexrayLpdu, status, AutomotiveBus_Stream_Pdu_FlexrayLpduStatus, AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t, INT8_C(0))

struct AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_vec_len(AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_table_t AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_vec_at(AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_FlexrayLpduConfig_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_FlexrayLpduConfig)

/**  Config: Slot ID of the frame. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, slot_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Payload length. */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, payload_length, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Config: Number of cycles between frame transmission. */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, cycle_repetition, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Config: Cycle when frame is first sent. */
__flatbuffers_define_scalar_field(3, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, base_cycle, flatbuffers_uint8, uint8_t, UINT8_C(0))
/**  Config: Index into the FlexrayConfig.frame_table (self reference). */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, frame_table_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: FlexRay controller/interface internal reference. */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, lpdu_table_index, flatbuffers_uint16, uint16_t, UINT16_C(0))
/**  Config: Frame direction. */
__flatbuffers_define_scalar_field(6, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, direction, AutomotiveBus_Stream_Pdu_FlexrayDirection, AutomotiveBus_Stream_Pdu_FlexrayDirection_enum_t, INT8_C(0))
/**  Config: Channels the frame will be sent over. */
__flatbuffers_define_scalar_field(7, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, channel, AutomotiveBus_Stream_Pdu_FlexrayChannel, AutomotiveBus_Stream_Pdu_FlexrayChannel_enum_t, INT8_C(0))
/**  Config: Transmit mode of the frame. */
__flatbuffers_define_scalar_field(8, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, transmit_mode, AutomotiveBus_Stream_Pdu_FlexrayTransmitMode, AutomotiveBus_Stream_Pdu_FlexrayTransmitMode_enum_t, INT8_C(0))
/**  Frame: Status of this frame (actual/observed status). */
__flatbuffers_define_scalar_field(9, AutomotiveBus_Stream_Pdu_FlexrayLpduConfig, status, AutomotiveBus_Stream_Pdu_FlexrayLpduStatus, AutomotiveBus_Stream_Pdu_FlexrayLpduStatus_enum_t, INT8_C(0))
/** 
 *     FlexRay Metadata
 *     ---------------- */
typedef uint8_t AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_FlexrayMetadataType, AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, AutomotiveBus_Stream_Pdu_FlexrayMetadataType)
#define AutomotiveBus_Stream_Pdu_FlexrayMetadataType_NONE ((AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t)UINT8_C(0))
#define AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Lpdu ((AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t)UINT8_C(1))
#define AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Config ((AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t)UINT8_C(2))
#define AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Status ((AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t)UINT8_C(3))

static inline const char *AutomotiveBus_Stream_Pdu_FlexrayMetadataType_type_name(AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_NONE: return "NONE";
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Lpdu: return "Lpdu";
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Config: return "Config";
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Status: return "Status";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_FlexrayMetadataType_is_known_type(AutomotiveBus_Stream_Pdu_FlexrayMetadataType_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_NONE: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Lpdu: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Config: return 1;
    case AutomotiveBus_Stream_Pdu_FlexrayMetadataType_Status: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Stream_Pdu_FlexrayMetadata_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_FlexrayMetadata_vec_len(AutomotiveBus_Stream_Pdu_FlexrayMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_FlexrayMetadata_table_t AutomotiveBus_Stream_Pdu_FlexrayMetadata_vec_at(AutomotiveBus_Stream_Pdu_FlexrayMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_FlexrayMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_FlexrayMetadata)

__flatbuffers_define_struct_field(0, AutomotiveBus_Stream_Pdu_FlexrayMetadata, node_ident, AutomotiveBus_Stream_Pdu_FlexrayNodeIdentifier_struct_t, 0)
/**  FlexRay Metadata can be one of several Tables. */
__flatbuffers_define_union_field(flatbuffers_, 2, AutomotiveBus_Stream_Pdu_FlexrayMetadata, metadata, AutomotiveBus_Stream_Pdu_FlexrayMetadataType, 0)
/** 
 *     PDU Object / Stream
 *     ------------------- */
typedef uint8_t AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t;
__flatbuffers_define_integer_type(AutomotiveBus_Stream_Pdu_TransportMetadata, AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, AutomotiveBus_Stream_Pdu_TransportMetadata)
#define AutomotiveBus_Stream_Pdu_TransportMetadata_NONE ((AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t)UINT8_C(0))
#define AutomotiveBus_Stream_Pdu_TransportMetadata_Can ((AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t)UINT8_C(1))
#define AutomotiveBus_Stream_Pdu_TransportMetadata_Ip ((AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t)UINT8_C(2))
#define AutomotiveBus_Stream_Pdu_TransportMetadata_Struct ((AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t)UINT8_C(3))
#define AutomotiveBus_Stream_Pdu_TransportMetadata_Flexray ((AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t)UINT8_C(4))

static inline const char *AutomotiveBus_Stream_Pdu_TransportMetadata_type_name(AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_TransportMetadata_NONE: return "NONE";
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Can: return "Can";
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Ip: return "Ip";
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Struct: return "Struct";
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Flexray: return "Flexray";
    default: return "";
    }
}

static inline int AutomotiveBus_Stream_Pdu_TransportMetadata_is_known_type(AutomotiveBus_Stream_Pdu_TransportMetadata_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Stream_Pdu_TransportMetadata_NONE: return 1;
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Can: return 1;
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Ip: return 1;
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Struct: return 1;
    case AutomotiveBus_Stream_Pdu_TransportMetadata_Flexray: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Stream_Pdu_Pdu_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_Pdu_vec_len(AutomotiveBus_Stream_Pdu_Pdu_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_Pdu_table_t AutomotiveBus_Stream_Pdu_Pdu_vec_at(AutomotiveBus_Stream_Pdu_Pdu_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_Pdu_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_Pdu)

/**  PDU: Identifier. */
__flatbuffers_define_scalar_field(0, AutomotiveBus_Stream_Pdu_Pdu, id, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  PDU: Payload (DLC is vector length). */
__flatbuffers_define_vector_field(1, AutomotiveBus_Stream_Pdu_Pdu, payload, flatbuffers_uint8_vec_t, 0)
/**  PDU: Transport metadata relating to this PDU (optional). */
__flatbuffers_define_union_field(flatbuffers_, 3, AutomotiveBus_Stream_Pdu_Pdu, transport, AutomotiveBus_Stream_Pdu_TransportMetadata, 0)
/** 
 *         Identifying Properties
 *         ----------------------
 *         These fields are (typically) encoded as a part of the MIMEtype which
 *         configures the source of a PDU stream. They may however also be 
 *         encoded in the TransportMetadata if appropriate.
 *     
 *  Identifier: SWC ID of SWC _originating_ this PDU. */
__flatbuffers_define_scalar_field(4, AutomotiveBus_Stream_Pdu_Pdu, swc_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  Identifier: ECU ID of ECU _originating_ this PDU. */
__flatbuffers_define_scalar_field(5, AutomotiveBus_Stream_Pdu_Pdu, ecu_id, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct AutomotiveBus_Stream_Pdu_Stream_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Stream_Pdu_Stream_vec_len(AutomotiveBus_Stream_Pdu_Stream_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Stream_Pdu_Stream_table_t AutomotiveBus_Stream_Pdu_Stream_vec_at(AutomotiveBus_Stream_Pdu_Stream_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Stream_Pdu_Stream_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Stream_Pdu_Stream)

/**  STREAM: PDU Vector. */
__flatbuffers_define_vector_field(0, AutomotiveBus_Stream_Pdu_Stream, pdus, AutomotiveBus_Stream_Pdu_Pdu_vec_t, 0)
/**  Metadata: Node UID of the Simulation (or System) node which is sending
 *   this stream object. Used by a Node to detect incoming stream objects
 *   which the Node had previously sent (i.e. an echo from the underlying
 *   implementation of the stream transport). */
__flatbuffers_define_scalar_field(1, AutomotiveBus_Stream_Pdu_Stream, node_uid, flatbuffers_uint32, uint32_t, UINT32_C(0))
/**  Metadata: Simulation Time when this stream was produced. */
__flatbuffers_define_scalar_field(2, AutomotiveBus_Stream_Pdu_Stream, simulation_time, flatbuffers_double, double, 0.000000)


#include "flatcc/flatcc_epilogue.h"
#endif /* PDU_READER_H */
