#ifndef ETHERNET_READER_H
#define ETHERNET_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "RIEN"
#undef flatbuffers_extension
#define flatbuffers_extension ".ethernet"

typedef struct AutomotiveBus_Register_Ethernet_TimeSpec AutomotiveBus_Register_Ethernet_TimeSpec_t;
typedef const AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_struct_t;
typedef AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_mutable_struct_t;
typedef const AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_vec_t;
typedef AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_mutable_vec_t;
typedef struct AutomotiveBus_Register_Ethernet_MessageTiming AutomotiveBus_Register_Ethernet_MessageTiming_t;
typedef const AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_struct_t;
typedef AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_mutable_struct_t;
typedef const AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_vec_t;
typedef AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_mutable_vec_t;

typedef const struct AutomotiveBus_Register_Ethernet_EthernetStatus_table *AutomotiveBus_Register_Ethernet_EthernetStatus_table_t;
typedef struct AutomotiveBus_Register_Ethernet_EthernetStatus_table *AutomotiveBus_Register_Ethernet_EthernetStatus_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_EthernetStatus_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_EthernetStatus_mutable_vec_t;
typedef const struct AutomotiveBus_Register_Ethernet_Frame_table *AutomotiveBus_Register_Ethernet_Frame_table_t;
typedef struct AutomotiveBus_Register_Ethernet_Frame_table *AutomotiveBus_Register_Ethernet_Frame_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_Frame_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_Frame_mutable_vec_t;
typedef const struct AutomotiveBus_Register_Ethernet_MetaFrame_table *AutomotiveBus_Register_Ethernet_MetaFrame_table_t;
typedef struct AutomotiveBus_Register_Ethernet_MetaFrame_table *AutomotiveBus_Register_Ethernet_MetaFrame_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_MetaFrame_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_MetaFrame_mutable_vec_t;
typedef const struct AutomotiveBus_Register_Ethernet_RegisterFile_table *AutomotiveBus_Register_Ethernet_RegisterFile_table_t;
typedef struct AutomotiveBus_Register_Ethernet_RegisterFile_table *AutomotiveBus_Register_Ethernet_RegisterFile_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_RegisterFile_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_Ethernet_RegisterFile_mutable_vec_t;
#ifndef AutomotiveBus_Register_Ethernet_EthernetStatus_identifier
#define AutomotiveBus_Register_Ethernet_EthernetStatus_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_Ethernet_EthernetStatus_type_hash ((flatbuffers_thash_t)0x2a63bead)
#define AutomotiveBus_Register_Ethernet_EthernetStatus_type_identifier "\xad\xbe\x63\x2a"
#ifndef AutomotiveBus_Register_Ethernet_TimeSpec_identifier
#define AutomotiveBus_Register_Ethernet_TimeSpec_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_Ethernet_TimeSpec_type_hash ((flatbuffers_thash_t)0x40a2d032)
#define AutomotiveBus_Register_Ethernet_TimeSpec_type_identifier "\x32\xd0\xa2\x40"
#ifndef AutomotiveBus_Register_Ethernet_MessageTiming_identifier
#define AutomotiveBus_Register_Ethernet_MessageTiming_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_Ethernet_MessageTiming_type_hash ((flatbuffers_thash_t)0x849460c9)
#define AutomotiveBus_Register_Ethernet_MessageTiming_type_identifier "\xc9\x60\x94\x84"
#ifndef AutomotiveBus_Register_Ethernet_Frame_identifier
#define AutomotiveBus_Register_Ethernet_Frame_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_Ethernet_Frame_type_hash ((flatbuffers_thash_t)0xeefc3ee5)
#define AutomotiveBus_Register_Ethernet_Frame_type_identifier "\xe5\x3e\xfc\xee"
#ifndef AutomotiveBus_Register_Ethernet_MetaFrame_identifier
#define AutomotiveBus_Register_Ethernet_MetaFrame_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_Ethernet_MetaFrame_type_hash ((flatbuffers_thash_t)0x8db3244e)
#define AutomotiveBus_Register_Ethernet_MetaFrame_type_identifier "\x4e\x24\xb3\x8d"
#ifndef AutomotiveBus_Register_Ethernet_RegisterFile_identifier
#define AutomotiveBus_Register_Ethernet_RegisterFile_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_Ethernet_RegisterFile_type_hash ((flatbuffers_thash_t)0x34c977)
#define AutomotiveBus_Register_Ethernet_RegisterFile_type_identifier "\x77\xc9\x34\x00"

/** 
 *     Ethernet Bus Model
 *     ================== */
typedef int8_t AutomotiveBus_Register_Ethernet_BusSync_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_Ethernet_BusSync, AutomotiveBus_Register_Ethernet_BusSync_enum_t, 8)
#define AutomotiveBus_Register_Ethernet_BusSync_NoSync ((AutomotiveBus_Register_Ethernet_BusSync_enum_t)INT8_C(0))
#define AutomotiveBus_Register_Ethernet_BusSync_Sync ((AutomotiveBus_Register_Ethernet_BusSync_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Register_Ethernet_BusSync_name(AutomotiveBus_Register_Ethernet_BusSync_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_Ethernet_BusSync_NoSync: return "NoSync";
    case AutomotiveBus_Register_Ethernet_BusSync_Sync: return "Sync";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_Ethernet_BusSync_is_known_value(AutomotiveBus_Register_Ethernet_BusSync_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_Ethernet_BusSync_NoSync: return 1;
    case AutomotiveBus_Register_Ethernet_BusSync_Sync: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Register_Ethernet_BufferDirection_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_Ethernet_BufferDirection, AutomotiveBus_Register_Ethernet_BufferDirection_enum_t, 8)
#define AutomotiveBus_Register_Ethernet_BufferDirection_Tx ((AutomotiveBus_Register_Ethernet_BufferDirection_enum_t)INT8_C(0))
#define AutomotiveBus_Register_Ethernet_BufferDirection_Rx ((AutomotiveBus_Register_Ethernet_BufferDirection_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Register_Ethernet_BufferDirection_name(AutomotiveBus_Register_Ethernet_BufferDirection_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_Ethernet_BufferDirection_Tx: return "Tx";
    case AutomotiveBus_Register_Ethernet_BufferDirection_Rx: return "Rx";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_Ethernet_BufferDirection_is_known_value(AutomotiveBus_Register_Ethernet_BufferDirection_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_Ethernet_BufferDirection_Tx: return 1;
    case AutomotiveBus_Register_Ethernet_BufferDirection_Rx: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Register_Ethernet_BufferStatus_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_Ethernet_BufferStatus, AutomotiveBus_Register_Ethernet_BufferStatus_enum_t, 8)
#define AutomotiveBus_Register_Ethernet_BufferStatus_None ((AutomotiveBus_Register_Ethernet_BufferStatus_enum_t)INT8_C(0))
#define AutomotiveBus_Register_Ethernet_BufferStatus_RxError ((AutomotiveBus_Register_Ethernet_BufferStatus_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Register_Ethernet_BufferStatus_name(AutomotiveBus_Register_Ethernet_BufferStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_Ethernet_BufferStatus_None: return "None";
    case AutomotiveBus_Register_Ethernet_BufferStatus_RxError: return "RxError";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_Ethernet_BufferStatus_is_known_value(AutomotiveBus_Register_Ethernet_BufferStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_Ethernet_BufferStatus_None: return 1;
    case AutomotiveBus_Register_Ethernet_BufferStatus_RxError: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Register_Ethernet_TimeSpec {
    alignas(8) int64_t psec10;
};
static_assert(sizeof(AutomotiveBus_Register_Ethernet_TimeSpec_t) == 8, "struct size mismatch");

static inline const AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec__const_ptr_add(const AutomotiveBus_Register_Ethernet_TimeSpec_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec__ptr_add(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_struct_t AutomotiveBus_Register_Ethernet_TimeSpec_vec_at(AutomotiveBus_Register_Ethernet_TimeSpec_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t AutomotiveBus_Register_Ethernet_TimeSpec__size(void) { return 8; }
static inline size_t AutomotiveBus_Register_Ethernet_TimeSpec_vec_len(AutomotiveBus_Register_Ethernet_TimeSpec_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(AutomotiveBus_Register_Ethernet_TimeSpec)

__flatbuffers_define_struct_scalar_field(AutomotiveBus_Register_Ethernet_TimeSpec, psec10, flatbuffers_int64, int64_t)

struct AutomotiveBus_Register_Ethernet_MessageTiming {
    alignas(8) AutomotiveBus_Register_Ethernet_TimeSpec_t send_request;
    alignas(8) AutomotiveBus_Register_Ethernet_TimeSpec_t arbitration;
    alignas(8) AutomotiveBus_Register_Ethernet_TimeSpec_t reception;
};
static_assert(sizeof(AutomotiveBus_Register_Ethernet_MessageTiming_t) == 24, "struct size mismatch");

static inline const AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming__const_ptr_add(const AutomotiveBus_Register_Ethernet_MessageTiming_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming__ptr_add(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_struct_t AutomotiveBus_Register_Ethernet_MessageTiming_vec_at(AutomotiveBus_Register_Ethernet_MessageTiming_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t AutomotiveBus_Register_Ethernet_MessageTiming__size(void) { return 24; }
static inline size_t AutomotiveBus_Register_Ethernet_MessageTiming_vec_len(AutomotiveBus_Register_Ethernet_MessageTiming_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(AutomotiveBus_Register_Ethernet_MessageTiming)

__flatbuffers_define_struct_struct_field(AutomotiveBus_Register_Ethernet_MessageTiming, send_request, AutomotiveBus_Register_Ethernet_TimeSpec_struct_t)
__flatbuffers_define_struct_struct_field(AutomotiveBus_Register_Ethernet_MessageTiming, arbitration, AutomotiveBus_Register_Ethernet_TimeSpec_struct_t)
__flatbuffers_define_struct_struct_field(AutomotiveBus_Register_Ethernet_MessageTiming, reception, AutomotiveBus_Register_Ethernet_TimeSpec_struct_t)


struct AutomotiveBus_Register_Ethernet_EthernetStatus_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_Ethernet_EthernetStatus_vec_len(AutomotiveBus_Register_Ethernet_EthernetStatus_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_Ethernet_EthernetStatus_table_t AutomotiveBus_Register_Ethernet_EthernetStatus_vec_at(AutomotiveBus_Register_Ethernet_EthernetStatus_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_Ethernet_EthernetStatus_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_Ethernet_EthernetStatus)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Register_Ethernet_EthernetStatus, sync, AutomotiveBus_Register_Ethernet_BusSync, AutomotiveBus_Register_Ethernet_BusSync_enum_t, INT8_C(0))

struct AutomotiveBus_Register_Ethernet_Frame_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_Ethernet_Frame_vec_len(AutomotiveBus_Register_Ethernet_Frame_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_Ethernet_Frame_table_t AutomotiveBus_Register_Ethernet_Frame_vec_at(AutomotiveBus_Register_Ethernet_Frame_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_Ethernet_Frame_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_Ethernet_Frame)

__flatbuffers_define_vector_field(0, AutomotiveBus_Register_Ethernet_Frame, dest_mac, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_vector_field(1, AutomotiveBus_Register_Ethernet_Frame, src_mac, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_scalar_field(2, AutomotiveBus_Register_Ethernet_Frame, vlan_tag, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_scalar_field(3, AutomotiveBus_Register_Ethernet_Frame, ether_type, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_vector_field(4, AutomotiveBus_Register_Ethernet_Frame, data, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_scalar_field(5, AutomotiveBus_Register_Ethernet_Frame, length, flatbuffers_uint16, uint16_t, UINT16_C(0))

struct AutomotiveBus_Register_Ethernet_MetaFrame_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_Ethernet_MetaFrame_vec_len(AutomotiveBus_Register_Ethernet_MetaFrame_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_Ethernet_MetaFrame_table_t AutomotiveBus_Register_Ethernet_MetaFrame_vec_at(AutomotiveBus_Register_Ethernet_MetaFrame_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_Ethernet_MetaFrame_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_Ethernet_MetaFrame)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Register_Ethernet_MetaFrame, status, AutomotiveBus_Register_Ethernet_BufferStatus, AutomotiveBus_Register_Ethernet_BufferStatus_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(1, AutomotiveBus_Register_Ethernet_MetaFrame, direction, AutomotiveBus_Register_Ethernet_BufferDirection, AutomotiveBus_Register_Ethernet_BufferDirection_enum_t, INT8_C(0))
__flatbuffers_define_table_field(2, AutomotiveBus_Register_Ethernet_MetaFrame, frame, AutomotiveBus_Register_Ethernet_Frame_table_t, 0)
__flatbuffers_define_struct_field(3, AutomotiveBus_Register_Ethernet_MetaFrame, timing, AutomotiveBus_Register_Ethernet_MessageTiming_struct_t, 0)

/** 
 *     Ethernet Register File
 *     ====================== */
struct AutomotiveBus_Register_Ethernet_RegisterFile_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_Ethernet_RegisterFile_vec_len(AutomotiveBus_Register_Ethernet_RegisterFile_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_Ethernet_RegisterFile_table_t AutomotiveBus_Register_Ethernet_RegisterFile_vec_at(AutomotiveBus_Register_Ethernet_RegisterFile_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_Ethernet_RegisterFile_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_Ethernet_RegisterFile)

__flatbuffers_define_vector_field(0, AutomotiveBus_Register_Ethernet_RegisterFile, buffer, AutomotiveBus_Register_Ethernet_MetaFrame_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* ETHERNET_READER_H */
