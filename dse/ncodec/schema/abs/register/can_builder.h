#ifndef CAN_BUILDER_H
#define CAN_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef CAN_READER_H
#include "can_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "RICA"
#undef flatbuffers_extension
#define flatbuffers_extension ".can"

#define __AutomotiveBus_Register_Can_BusState_formal_args , AutomotiveBus_Register_Can_BusState_enum_t v0
#define __AutomotiveBus_Register_Can_BusState_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Can_BusState, AutomotiveBus_Register_Can_BusState_enum_t)
#define __AutomotiveBus_Register_Can_BufferDirection_formal_args , AutomotiveBus_Register_Can_BufferDirection_enum_t v0
#define __AutomotiveBus_Register_Can_BufferDirection_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Can_BufferDirection, AutomotiveBus_Register_Can_BufferDirection_enum_t)
#define __AutomotiveBus_Register_Can_BufferStatus_formal_args , AutomotiveBus_Register_Can_BufferStatus_enum_t v0
#define __AutomotiveBus_Register_Can_BufferStatus_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Can_BufferStatus, AutomotiveBus_Register_Can_BufferStatus_enum_t)
#define __AutomotiveBus_Register_Can_FrameType_formal_args , AutomotiveBus_Register_Can_FrameType_enum_t v0
#define __AutomotiveBus_Register_Can_FrameType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Can_FrameType, AutomotiveBus_Register_Can_FrameType_enum_t)

#define __AutomotiveBus_Register_Can_TimeSpec_formal_args , int64_t v0
#define __AutomotiveBus_Register_Can_TimeSpec_call_args , v0
static inline AutomotiveBus_Register_Can_TimeSpec_t *AutomotiveBus_Register_Can_TimeSpec_assign(AutomotiveBus_Register_Can_TimeSpec_t *p, int64_t v0)
{ p->psec10 = v0;
  return p; }
static inline AutomotiveBus_Register_Can_TimeSpec_t *AutomotiveBus_Register_Can_TimeSpec_copy(AutomotiveBus_Register_Can_TimeSpec_t *p, const AutomotiveBus_Register_Can_TimeSpec_t *p2)
{ p->psec10 = p2->psec10;
  return p; }
static inline AutomotiveBus_Register_Can_TimeSpec_t *AutomotiveBus_Register_Can_TimeSpec_assign_to_pe(AutomotiveBus_Register_Can_TimeSpec_t *p, int64_t v0)
{ flatbuffers_int64_assign_to_pe(&p->psec10, v0);
  return p; }
static inline AutomotiveBus_Register_Can_TimeSpec_t *AutomotiveBus_Register_Can_TimeSpec_copy_to_pe(AutomotiveBus_Register_Can_TimeSpec_t *p, const AutomotiveBus_Register_Can_TimeSpec_t *p2)
{ flatbuffers_int64_copy_to_pe(&p->psec10, &p2->psec10);
  return p; }
static inline AutomotiveBus_Register_Can_TimeSpec_t *AutomotiveBus_Register_Can_TimeSpec_assign_from_pe(AutomotiveBus_Register_Can_TimeSpec_t *p, int64_t v0)
{ flatbuffers_int64_assign_from_pe(&p->psec10, v0);
  return p; }
static inline AutomotiveBus_Register_Can_TimeSpec_t *AutomotiveBus_Register_Can_TimeSpec_copy_from_pe(AutomotiveBus_Register_Can_TimeSpec_t *p, const AutomotiveBus_Register_Can_TimeSpec_t *p2)
{ flatbuffers_int64_copy_from_pe(&p->psec10, &p2->psec10);
  return p; }
__flatbuffers_build_struct(flatbuffers_, AutomotiveBus_Register_Can_TimeSpec, 8, 8, AutomotiveBus_Register_Can_TimeSpec_identifier, AutomotiveBus_Register_Can_TimeSpec_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, AutomotiveBus_Register_Can_TimeSpec, AutomotiveBus_Register_Can_TimeSpec_t)

#define __AutomotiveBus_Register_Can_MessageTiming_formal_args , int64_t v0, int64_t v1, int64_t v2
#define __AutomotiveBus_Register_Can_MessageTiming_call_args , v0, v1, v2
static inline AutomotiveBus_Register_Can_MessageTiming_t *AutomotiveBus_Register_Can_MessageTiming_assign(AutomotiveBus_Register_Can_MessageTiming_t *p, int64_t v0, int64_t v1, int64_t v2)
{ AutomotiveBus_Register_Can_TimeSpec_assign(&p->send_request, v0); AutomotiveBus_Register_Can_TimeSpec_assign(&p->arbitration, v1); AutomotiveBus_Register_Can_TimeSpec_assign(&p->reception, v2);
  return p; }
static inline AutomotiveBus_Register_Can_MessageTiming_t *AutomotiveBus_Register_Can_MessageTiming_copy(AutomotiveBus_Register_Can_MessageTiming_t *p, const AutomotiveBus_Register_Can_MessageTiming_t *p2)
{ AutomotiveBus_Register_Can_TimeSpec_copy(&p->send_request, &p2->send_request); AutomotiveBus_Register_Can_TimeSpec_copy(&p->arbitration, &p2->arbitration); AutomotiveBus_Register_Can_TimeSpec_copy(&p->reception, &p2->reception);
  return p; }
static inline AutomotiveBus_Register_Can_MessageTiming_t *AutomotiveBus_Register_Can_MessageTiming_assign_to_pe(AutomotiveBus_Register_Can_MessageTiming_t *p, int64_t v0, int64_t v1, int64_t v2)
{ AutomotiveBus_Register_Can_TimeSpec_assign_to_pe(&p->send_request, v0); AutomotiveBus_Register_Can_TimeSpec_assign_to_pe(&p->arbitration, v1); AutomotiveBus_Register_Can_TimeSpec_assign_to_pe(&p->reception, v2);
  return p; }
static inline AutomotiveBus_Register_Can_MessageTiming_t *AutomotiveBus_Register_Can_MessageTiming_copy_to_pe(AutomotiveBus_Register_Can_MessageTiming_t *p, const AutomotiveBus_Register_Can_MessageTiming_t *p2)
{ AutomotiveBus_Register_Can_TimeSpec_copy_to_pe(&p->send_request, &p2->send_request); AutomotiveBus_Register_Can_TimeSpec_copy_to_pe(&p->arbitration, &p2->arbitration); AutomotiveBus_Register_Can_TimeSpec_copy_to_pe(&p->reception, &p2->reception);
  return p; }
static inline AutomotiveBus_Register_Can_MessageTiming_t *AutomotiveBus_Register_Can_MessageTiming_assign_from_pe(AutomotiveBus_Register_Can_MessageTiming_t *p, int64_t v0, int64_t v1, int64_t v2)
{ AutomotiveBus_Register_Can_TimeSpec_assign_from_pe(&p->send_request, v0); AutomotiveBus_Register_Can_TimeSpec_assign_from_pe(&p->arbitration, v1); AutomotiveBus_Register_Can_TimeSpec_assign_from_pe(&p->reception, v2);
  return p; }
static inline AutomotiveBus_Register_Can_MessageTiming_t *AutomotiveBus_Register_Can_MessageTiming_copy_from_pe(AutomotiveBus_Register_Can_MessageTiming_t *p, const AutomotiveBus_Register_Can_MessageTiming_t *p2)
{ AutomotiveBus_Register_Can_TimeSpec_copy_from_pe(&p->send_request, &p2->send_request); AutomotiveBus_Register_Can_TimeSpec_copy_from_pe(&p->arbitration, &p2->arbitration); AutomotiveBus_Register_Can_TimeSpec_copy_from_pe(&p->reception, &p2->reception);
  return p; }
__flatbuffers_build_struct(flatbuffers_, AutomotiveBus_Register_Can_MessageTiming, 24, 8, AutomotiveBus_Register_Can_MessageTiming_identifier, AutomotiveBus_Register_Can_MessageTiming_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, AutomotiveBus_Register_Can_MessageTiming, AutomotiveBus_Register_Can_MessageTiming_t)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Can_CanStatus_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Can_CanStatus_ref_t;
static AutomotiveBus_Register_Can_CanStatus_ref_t AutomotiveBus_Register_Can_CanStatus_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_CanStatus_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Can_CanStatus, 1)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Can_Frame_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Can_Frame_ref_t;
static AutomotiveBus_Register_Can_Frame_ref_t AutomotiveBus_Register_Can_Frame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_Frame_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Can_Frame, 5)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Can_MetaFrame_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Can_MetaFrame_ref_t;
static AutomotiveBus_Register_Can_MetaFrame_ref_t AutomotiveBus_Register_Can_MetaFrame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_MetaFrame_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Can_MetaFrame, 5)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Can_RegisterFile_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Can_RegisterFile_ref_t;
static AutomotiveBus_Register_Can_RegisterFile_ref_t AutomotiveBus_Register_Can_RegisterFile_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_RegisterFile_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Can_RegisterFile, 1)

#define __AutomotiveBus_Register_Can_CanStatus_formal_args , AutomotiveBus_Register_Can_BusState_enum_t v0
#define __AutomotiveBus_Register_Can_CanStatus_call_args , v0
static inline AutomotiveBus_Register_Can_CanStatus_ref_t AutomotiveBus_Register_Can_CanStatus_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_CanStatus_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Can_CanStatus, AutomotiveBus_Register_Can_CanStatus_identifier, AutomotiveBus_Register_Can_CanStatus_type_identifier)

#define __AutomotiveBus_Register_Can_Frame_formal_args ,\
  uint32_t v0, flatbuffers_uint8_vec_ref_t v1, uint8_t v2, flatbuffers_bool_t v3, AutomotiveBus_Register_Can_FrameType_enum_t v4
#define __AutomotiveBus_Register_Can_Frame_call_args ,\
  v0, v1, v2, v3, v4
static inline AutomotiveBus_Register_Can_Frame_ref_t AutomotiveBus_Register_Can_Frame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_Frame_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Can_Frame, AutomotiveBus_Register_Can_Frame_identifier, AutomotiveBus_Register_Can_Frame_type_identifier)

#define __AutomotiveBus_Register_Can_MetaFrame_formal_args ,\
  AutomotiveBus_Register_Can_BufferStatus_enum_t v0, AutomotiveBus_Register_Can_BufferDirection_enum_t v1, flatbuffers_bool_t v2, AutomotiveBus_Register_Can_Frame_ref_t v3, AutomotiveBus_Register_Can_MessageTiming_t *v4
#define __AutomotiveBus_Register_Can_MetaFrame_call_args ,\
  v0, v1, v2, v3, v4
static inline AutomotiveBus_Register_Can_MetaFrame_ref_t AutomotiveBus_Register_Can_MetaFrame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_MetaFrame_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Can_MetaFrame, AutomotiveBus_Register_Can_MetaFrame_identifier, AutomotiveBus_Register_Can_MetaFrame_type_identifier)

#define __AutomotiveBus_Register_Can_RegisterFile_formal_args , AutomotiveBus_Register_Can_MetaFrame_vec_ref_t v0
#define __AutomotiveBus_Register_Can_RegisterFile_call_args , v0
static inline AutomotiveBus_Register_Can_RegisterFile_ref_t AutomotiveBus_Register_Can_RegisterFile_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_RegisterFile_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Can_RegisterFile, AutomotiveBus_Register_Can_RegisterFile_identifier, AutomotiveBus_Register_Can_RegisterFile_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, AutomotiveBus_Register_Can_CanStatus_sync, AutomotiveBus_Register_Can_BusState, AutomotiveBus_Register_Can_BusState_enum_t, 1, 1, INT8_C(1), AutomotiveBus_Register_Can_CanStatus)

static inline AutomotiveBus_Register_Can_CanStatus_ref_t AutomotiveBus_Register_Can_CanStatus_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_CanStatus_formal_args)
{
    if (AutomotiveBus_Register_Can_CanStatus_start(B)
        || AutomotiveBus_Register_Can_CanStatus_sync_add(B, v0)) {
        return 0;
    }
    return AutomotiveBus_Register_Can_CanStatus_end(B);
}

static AutomotiveBus_Register_Can_CanStatus_ref_t AutomotiveBus_Register_Can_CanStatus_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_CanStatus_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Can_CanStatus_start(B)
        || AutomotiveBus_Register_Can_CanStatus_sync_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Can_CanStatus_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, AutomotiveBus_Register_Can_Frame_frame_id, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), AutomotiveBus_Register_Can_Frame)
__flatbuffers_build_vector_field(1, flatbuffers_, AutomotiveBus_Register_Can_Frame_payload, flatbuffers_uint8, uint8_t, AutomotiveBus_Register_Can_Frame)
__flatbuffers_build_scalar_field(2, flatbuffers_, AutomotiveBus_Register_Can_Frame_length, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), AutomotiveBus_Register_Can_Frame)
__flatbuffers_build_scalar_field(3, flatbuffers_, AutomotiveBus_Register_Can_Frame_rtr, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), AutomotiveBus_Register_Can_Frame)
__flatbuffers_build_scalar_field(4, flatbuffers_, AutomotiveBus_Register_Can_Frame_frame_type, AutomotiveBus_Register_Can_FrameType, AutomotiveBus_Register_Can_FrameType_enum_t, 1, 1, INT8_C(0), AutomotiveBus_Register_Can_Frame)

static inline AutomotiveBus_Register_Can_Frame_ref_t AutomotiveBus_Register_Can_Frame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_Frame_formal_args)
{
    if (AutomotiveBus_Register_Can_Frame_start(B)
        || AutomotiveBus_Register_Can_Frame_frame_id_add(B, v0)
        || AutomotiveBus_Register_Can_Frame_payload_add(B, v1)
        || AutomotiveBus_Register_Can_Frame_length_add(B, v2)
        || AutomotiveBus_Register_Can_Frame_rtr_add(B, v3)
        || AutomotiveBus_Register_Can_Frame_frame_type_add(B, v4)) {
        return 0;
    }
    return AutomotiveBus_Register_Can_Frame_end(B);
}

static AutomotiveBus_Register_Can_Frame_ref_t AutomotiveBus_Register_Can_Frame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_Frame_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Can_Frame_start(B)
        || AutomotiveBus_Register_Can_Frame_frame_id_pick(B, t)
        || AutomotiveBus_Register_Can_Frame_payload_pick(B, t)
        || AutomotiveBus_Register_Can_Frame_length_pick(B, t)
        || AutomotiveBus_Register_Can_Frame_rtr_pick(B, t)
        || AutomotiveBus_Register_Can_Frame_frame_type_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Can_Frame_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, AutomotiveBus_Register_Can_MetaFrame_status, AutomotiveBus_Register_Can_BufferStatus, AutomotiveBus_Register_Can_BufferStatus_enum_t, 1, 1, INT8_C(0), AutomotiveBus_Register_Can_MetaFrame)
__flatbuffers_build_scalar_field(1, flatbuffers_, AutomotiveBus_Register_Can_MetaFrame_direction, AutomotiveBus_Register_Can_BufferDirection, AutomotiveBus_Register_Can_BufferDirection_enum_t, 1, 1, INT8_C(0), AutomotiveBus_Register_Can_MetaFrame)
__flatbuffers_build_scalar_field(2, flatbuffers_, AutomotiveBus_Register_Can_MetaFrame_can_fd_enabled, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), AutomotiveBus_Register_Can_MetaFrame)
__flatbuffers_build_table_field(3, flatbuffers_, AutomotiveBus_Register_Can_MetaFrame_frame, AutomotiveBus_Register_Can_Frame, AutomotiveBus_Register_Can_MetaFrame)
__flatbuffers_build_struct_field(4, flatbuffers_, AutomotiveBus_Register_Can_MetaFrame_timing, AutomotiveBus_Register_Can_MessageTiming, 24, 8, AutomotiveBus_Register_Can_MetaFrame)

static inline AutomotiveBus_Register_Can_MetaFrame_ref_t AutomotiveBus_Register_Can_MetaFrame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_MetaFrame_formal_args)
{
    if (AutomotiveBus_Register_Can_MetaFrame_start(B)
        || AutomotiveBus_Register_Can_MetaFrame_timing_add(B, v4)
        || AutomotiveBus_Register_Can_MetaFrame_frame_add(B, v3)
        || AutomotiveBus_Register_Can_MetaFrame_status_add(B, v0)
        || AutomotiveBus_Register_Can_MetaFrame_direction_add(B, v1)
        || AutomotiveBus_Register_Can_MetaFrame_can_fd_enabled_add(B, v2)) {
        return 0;
    }
    return AutomotiveBus_Register_Can_MetaFrame_end(B);
}

static AutomotiveBus_Register_Can_MetaFrame_ref_t AutomotiveBus_Register_Can_MetaFrame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_MetaFrame_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Can_MetaFrame_start(B)
        || AutomotiveBus_Register_Can_MetaFrame_timing_pick(B, t)
        || AutomotiveBus_Register_Can_MetaFrame_frame_pick(B, t)
        || AutomotiveBus_Register_Can_MetaFrame_status_pick(B, t)
        || AutomotiveBus_Register_Can_MetaFrame_direction_pick(B, t)
        || AutomotiveBus_Register_Can_MetaFrame_can_fd_enabled_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Can_MetaFrame_end(B));
}

__flatbuffers_build_table_vector_field(0, flatbuffers_, AutomotiveBus_Register_Can_RegisterFile_buffer, AutomotiveBus_Register_Can_MetaFrame, AutomotiveBus_Register_Can_RegisterFile)

static inline AutomotiveBus_Register_Can_RegisterFile_ref_t AutomotiveBus_Register_Can_RegisterFile_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Can_RegisterFile_formal_args)
{
    if (AutomotiveBus_Register_Can_RegisterFile_start(B)
        || AutomotiveBus_Register_Can_RegisterFile_buffer_add(B, v0)) {
        return 0;
    }
    return AutomotiveBus_Register_Can_RegisterFile_end(B);
}

static AutomotiveBus_Register_Can_RegisterFile_ref_t AutomotiveBus_Register_Can_RegisterFile_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Can_RegisterFile_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Can_RegisterFile_start(B)
        || AutomotiveBus_Register_Can_RegisterFile_buffer_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Can_RegisterFile_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* CAN_BUILDER_H */
