#ifndef FLEXRAY_READER_H
#define FLEXRAY_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "RIFR"
#undef flatbuffers_extension
#define flatbuffers_extension ".flexray"

typedef struct AutomotiveBus_Register_FlexRay_TimeSpec AutomotiveBus_Register_FlexRay_TimeSpec_t;
typedef const AutomotiveBus_Register_FlexRay_TimeSpec_t *AutomotiveBus_Register_FlexRay_TimeSpec_struct_t;
typedef AutomotiveBus_Register_FlexRay_TimeSpec_t *AutomotiveBus_Register_FlexRay_TimeSpec_mutable_struct_t;
typedef const AutomotiveBus_Register_FlexRay_TimeSpec_t *AutomotiveBus_Register_FlexRay_TimeSpec_vec_t;
typedef AutomotiveBus_Register_FlexRay_TimeSpec_t *AutomotiveBus_Register_FlexRay_TimeSpec_mutable_vec_t;
typedef struct AutomotiveBus_Register_FlexRay_MessageTiming AutomotiveBus_Register_FlexRay_MessageTiming_t;
typedef const AutomotiveBus_Register_FlexRay_MessageTiming_t *AutomotiveBus_Register_FlexRay_MessageTiming_struct_t;
typedef AutomotiveBus_Register_FlexRay_MessageTiming_t *AutomotiveBus_Register_FlexRay_MessageTiming_mutable_struct_t;
typedef const AutomotiveBus_Register_FlexRay_MessageTiming_t *AutomotiveBus_Register_FlexRay_MessageTiming_vec_t;
typedef AutomotiveBus_Register_FlexRay_MessageTiming_t *AutomotiveBus_Register_FlexRay_MessageTiming_mutable_vec_t;

typedef const struct AutomotiveBus_Register_FlexRay_FlexrayStatus_table *AutomotiveBus_Register_FlexRay_FlexrayStatus_table_t;
typedef struct AutomotiveBus_Register_FlexRay_FlexrayStatus_table *AutomotiveBus_Register_FlexRay_FlexrayStatus_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_FlexrayStatus_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_FlexrayStatus_mutable_vec_t;
typedef const struct AutomotiveBus_Register_FlexRay_Frame_table *AutomotiveBus_Register_FlexRay_Frame_table_t;
typedef struct AutomotiveBus_Register_FlexRay_Frame_table *AutomotiveBus_Register_FlexRay_Frame_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_Frame_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_Frame_mutable_vec_t;
typedef const struct AutomotiveBus_Register_FlexRay_MetaFrame_table *AutomotiveBus_Register_FlexRay_MetaFrame_table_t;
typedef struct AutomotiveBus_Register_FlexRay_MetaFrame_table *AutomotiveBus_Register_FlexRay_MetaFrame_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_MetaFrame_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_MetaFrame_mutable_vec_t;
typedef const struct AutomotiveBus_Register_FlexRay_RegisterFile_table *AutomotiveBus_Register_FlexRay_RegisterFile_table_t;
typedef struct AutomotiveBus_Register_FlexRay_RegisterFile_table *AutomotiveBus_Register_FlexRay_RegisterFile_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_RegisterFile_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Register_FlexRay_RegisterFile_mutable_vec_t;
#ifndef AutomotiveBus_Register_FlexRay_FlexrayStatus_identifier
#define AutomotiveBus_Register_FlexRay_FlexrayStatus_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_FlexRay_FlexrayStatus_type_hash ((flatbuffers_thash_t)0xf1a4f23b)
#define AutomotiveBus_Register_FlexRay_FlexrayStatus_type_identifier "\x3b\xf2\xa4\xf1"
#ifndef AutomotiveBus_Register_FlexRay_TimeSpec_identifier
#define AutomotiveBus_Register_FlexRay_TimeSpec_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_FlexRay_TimeSpec_type_hash ((flatbuffers_thash_t)0x5fdb42c2)
#define AutomotiveBus_Register_FlexRay_TimeSpec_type_identifier "\xc2\x42\xdb\x5f"
#ifndef AutomotiveBus_Register_FlexRay_MessageTiming_identifier
#define AutomotiveBus_Register_FlexRay_MessageTiming_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_FlexRay_MessageTiming_type_hash ((flatbuffers_thash_t)0x52b2579)
#define AutomotiveBus_Register_FlexRay_MessageTiming_type_identifier "\x79\x25\x2b\x05"
#ifndef AutomotiveBus_Register_FlexRay_Frame_identifier
#define AutomotiveBus_Register_FlexRay_Frame_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_FlexRay_Frame_type_hash ((flatbuffers_thash_t)0x871a1315)
#define AutomotiveBus_Register_FlexRay_Frame_type_identifier "\x15\x13\x1a\x87"
#ifndef AutomotiveBus_Register_FlexRay_MetaFrame_identifier
#define AutomotiveBus_Register_FlexRay_MetaFrame_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_FlexRay_MetaFrame_type_hash ((flatbuffers_thash_t)0xfec6b6de)
#define AutomotiveBus_Register_FlexRay_MetaFrame_type_identifier "\xde\xb6\xc6\xfe"
#ifndef AutomotiveBus_Register_FlexRay_RegisterFile_identifier
#define AutomotiveBus_Register_FlexRay_RegisterFile_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Register_FlexRay_RegisterFile_type_hash ((flatbuffers_thash_t)0xa8879de7)
#define AutomotiveBus_Register_FlexRay_RegisterFile_type_identifier "\xe7\x9d\x87\xa8"

/** 
 *     L2 FlexRay Bus Model
 *     ==================== */
typedef int8_t AutomotiveBus_Register_FlexRay_BusSync_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_FlexRay_BusSync, AutomotiveBus_Register_FlexRay_BusSync_enum_t, 8)
#define AutomotiveBus_Register_FlexRay_BusSync_NoSync ((AutomotiveBus_Register_FlexRay_BusSync_enum_t)INT8_C(0))
#define AutomotiveBus_Register_FlexRay_BusSync_Sync ((AutomotiveBus_Register_FlexRay_BusSync_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Register_FlexRay_BusSync_name(AutomotiveBus_Register_FlexRay_BusSync_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_BusSync_NoSync: return "NoSync";
    case AutomotiveBus_Register_FlexRay_BusSync_Sync: return "Sync";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_FlexRay_BusSync_is_known_value(AutomotiveBus_Register_FlexRay_BusSync_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_BusSync_NoSync: return 1;
    case AutomotiveBus_Register_FlexRay_BusSync_Sync: return 1;
    default: return 0;
    }
}

/** 
 *     L3 FlexRay Bus Model
 *     ==================== */
typedef int8_t AutomotiveBus_Register_FlexRay_BufferDirection_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_FlexRay_BufferDirection, AutomotiveBus_Register_FlexRay_BufferDirection_enum_t, 8)
#define AutomotiveBus_Register_FlexRay_BufferDirection_Tx ((AutomotiveBus_Register_FlexRay_BufferDirection_enum_t)INT8_C(0))
#define AutomotiveBus_Register_FlexRay_BufferDirection_Rx ((AutomotiveBus_Register_FlexRay_BufferDirection_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Register_FlexRay_BufferDirection_name(AutomotiveBus_Register_FlexRay_BufferDirection_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_BufferDirection_Tx: return "Tx";
    case AutomotiveBus_Register_FlexRay_BufferDirection_Rx: return "Rx";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_FlexRay_BufferDirection_is_known_value(AutomotiveBus_Register_FlexRay_BufferDirection_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_BufferDirection_Tx: return 1;
    case AutomotiveBus_Register_FlexRay_BufferDirection_Rx: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Register_FlexRay_BufferStatus_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_FlexRay_BufferStatus, AutomotiveBus_Register_FlexRay_BufferStatus_enum_t, 8)
#define AutomotiveBus_Register_FlexRay_BufferStatus_None ((AutomotiveBus_Register_FlexRay_BufferStatus_enum_t)INT8_C(0))
#define AutomotiveBus_Register_FlexRay_BufferStatus_RxError ((AutomotiveBus_Register_FlexRay_BufferStatus_enum_t)INT8_C(1))

static inline const char *AutomotiveBus_Register_FlexRay_BufferStatus_name(AutomotiveBus_Register_FlexRay_BufferStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_BufferStatus_None: return "None";
    case AutomotiveBus_Register_FlexRay_BufferStatus_RxError: return "RxError";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_FlexRay_BufferStatus_is_known_value(AutomotiveBus_Register_FlexRay_BufferStatus_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_BufferStatus_None: return 1;
    case AutomotiveBus_Register_FlexRay_BufferStatus_RxError: return 1;
    default: return 0;
    }
}

typedef int8_t AutomotiveBus_Register_FlexRay_FrameChannel_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_FlexRay_FrameChannel, AutomotiveBus_Register_FlexRay_FrameChannel_enum_t, 8)
#define AutomotiveBus_Register_FlexRay_FrameChannel_None ((AutomotiveBus_Register_FlexRay_FrameChannel_enum_t)INT8_C(0))
#define AutomotiveBus_Register_FlexRay_FrameChannel_ChA ((AutomotiveBus_Register_FlexRay_FrameChannel_enum_t)INT8_C(1))
#define AutomotiveBus_Register_FlexRay_FrameChannel_ChB ((AutomotiveBus_Register_FlexRay_FrameChannel_enum_t)INT8_C(2))
#define AutomotiveBus_Register_FlexRay_FrameChannel_Both ((AutomotiveBus_Register_FlexRay_FrameChannel_enum_t)INT8_C(3))

static inline const char *AutomotiveBus_Register_FlexRay_FrameChannel_name(AutomotiveBus_Register_FlexRay_FrameChannel_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_FrameChannel_None: return "None";
    case AutomotiveBus_Register_FlexRay_FrameChannel_ChA: return "ChA";
    case AutomotiveBus_Register_FlexRay_FrameChannel_ChB: return "ChB";
    case AutomotiveBus_Register_FlexRay_FrameChannel_Both: return "Both";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_FlexRay_FrameChannel_is_known_value(AutomotiveBus_Register_FlexRay_FrameChannel_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_FrameChannel_None: return 1;
    case AutomotiveBus_Register_FlexRay_FrameChannel_ChA: return 1;
    case AutomotiveBus_Register_FlexRay_FrameChannel_ChB: return 1;
    case AutomotiveBus_Register_FlexRay_FrameChannel_Both: return 1;
    default: return 0;
    }
}

typedef uint8_t AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t;
__flatbuffers_define_integer_type(AutomotiveBus_Register_FlexRay_FrameIndicatorBits, AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t, 8)
#define AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Startup ((AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t)UINT8_C(1))
#define AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Sync ((AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t)UINT8_C(2))
#define AutomotiveBus_Register_FlexRay_FrameIndicatorBits_NotNull ((AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t)UINT8_C(4))
#define AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Payload ((AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t)UINT8_C(8))
#define AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Reserved ((AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t)UINT8_C(16))

static inline const char *AutomotiveBus_Register_FlexRay_FrameIndicatorBits_name(AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Startup: return "Startup";
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Sync: return "Sync";
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_NotNull: return "NotNull";
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Payload: return "Payload";
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Reserved: return "Reserved";
    default: return "";
    }
}

static inline int AutomotiveBus_Register_FlexRay_FrameIndicatorBits_is_known_value(AutomotiveBus_Register_FlexRay_FrameIndicatorBits_enum_t value)
{
    switch (value) {
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Startup: return 1;
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Sync: return 1;
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_NotNull: return 1;
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Payload: return 1;
    case AutomotiveBus_Register_FlexRay_FrameIndicatorBits_Reserved: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Register_FlexRay_TimeSpec {
    alignas(8) int64_t psec10;
};
static_assert(sizeof(AutomotiveBus_Register_FlexRay_TimeSpec_t) == 8, "struct size mismatch");

static inline const AutomotiveBus_Register_FlexRay_TimeSpec_t *AutomotiveBus_Register_FlexRay_TimeSpec__const_ptr_add(const AutomotiveBus_Register_FlexRay_TimeSpec_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_FlexRay_TimeSpec_t *AutomotiveBus_Register_FlexRay_TimeSpec__ptr_add(AutomotiveBus_Register_FlexRay_TimeSpec_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_FlexRay_TimeSpec_struct_t AutomotiveBus_Register_FlexRay_TimeSpec_vec_at(AutomotiveBus_Register_FlexRay_TimeSpec_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t AutomotiveBus_Register_FlexRay_TimeSpec__size(void) { return 8; }
static inline size_t AutomotiveBus_Register_FlexRay_TimeSpec_vec_len(AutomotiveBus_Register_FlexRay_TimeSpec_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(AutomotiveBus_Register_FlexRay_TimeSpec)

__flatbuffers_define_struct_scalar_field(AutomotiveBus_Register_FlexRay_TimeSpec, psec10, flatbuffers_int64, int64_t)

struct AutomotiveBus_Register_FlexRay_MessageTiming {
    alignas(8) AutomotiveBus_Register_FlexRay_TimeSpec_t send_request;
    alignas(8) AutomotiveBus_Register_FlexRay_TimeSpec_t arbitration;
    alignas(8) AutomotiveBus_Register_FlexRay_TimeSpec_t reception;
};
static_assert(sizeof(AutomotiveBus_Register_FlexRay_MessageTiming_t) == 24, "struct size mismatch");

static inline const AutomotiveBus_Register_FlexRay_MessageTiming_t *AutomotiveBus_Register_FlexRay_MessageTiming__const_ptr_add(const AutomotiveBus_Register_FlexRay_MessageTiming_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_FlexRay_MessageTiming_t *AutomotiveBus_Register_FlexRay_MessageTiming__ptr_add(AutomotiveBus_Register_FlexRay_MessageTiming_t *p, size_t i) { return p + i; }
static inline AutomotiveBus_Register_FlexRay_MessageTiming_struct_t AutomotiveBus_Register_FlexRay_MessageTiming_vec_at(AutomotiveBus_Register_FlexRay_MessageTiming_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t AutomotiveBus_Register_FlexRay_MessageTiming__size(void) { return 24; }
static inline size_t AutomotiveBus_Register_FlexRay_MessageTiming_vec_len(AutomotiveBus_Register_FlexRay_MessageTiming_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(AutomotiveBus_Register_FlexRay_MessageTiming)

__flatbuffers_define_struct_struct_field(AutomotiveBus_Register_FlexRay_MessageTiming, send_request, AutomotiveBus_Register_FlexRay_TimeSpec_struct_t)
__flatbuffers_define_struct_struct_field(AutomotiveBus_Register_FlexRay_MessageTiming, arbitration, AutomotiveBus_Register_FlexRay_TimeSpec_struct_t)
__flatbuffers_define_struct_struct_field(AutomotiveBus_Register_FlexRay_MessageTiming, reception, AutomotiveBus_Register_FlexRay_TimeSpec_struct_t)


struct AutomotiveBus_Register_FlexRay_FlexrayStatus_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_FlexRay_FlexrayStatus_vec_len(AutomotiveBus_Register_FlexRay_FlexrayStatus_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_FlexRay_FlexrayStatus_table_t AutomotiveBus_Register_FlexRay_FlexrayStatus_vec_at(AutomotiveBus_Register_FlexRay_FlexrayStatus_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_FlexRay_FlexrayStatus_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_FlexRay_FlexrayStatus)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Register_FlexRay_FlexrayStatus, sync, AutomotiveBus_Register_FlexRay_BusSync, AutomotiveBus_Register_FlexRay_BusSync_enum_t, INT8_C(0))

struct AutomotiveBus_Register_FlexRay_Frame_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_FlexRay_Frame_vec_len(AutomotiveBus_Register_FlexRay_Frame_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_FlexRay_Frame_table_t AutomotiveBus_Register_FlexRay_Frame_vec_at(AutomotiveBus_Register_FlexRay_Frame_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_FlexRay_Frame_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_FlexRay_Frame)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Register_FlexRay_Frame, frame_id, flatbuffers_uint16, uint16_t, UINT16_C(1))
__flatbuffers_define_scalar_field(1, AutomotiveBus_Register_FlexRay_Frame, indicators, flatbuffers_uint8, uint8_t, UINT8_C(12))
__flatbuffers_define_scalar_field(2, AutomotiveBus_Register_FlexRay_Frame, length, flatbuffers_uint8, uint8_t, UINT8_C(1))
__flatbuffers_define_vector_field(3, AutomotiveBus_Register_FlexRay_Frame, data, flatbuffers_uint8_vec_t, 0)

struct AutomotiveBus_Register_FlexRay_MetaFrame_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_FlexRay_MetaFrame_vec_len(AutomotiveBus_Register_FlexRay_MetaFrame_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_FlexRay_MetaFrame_table_t AutomotiveBus_Register_FlexRay_MetaFrame_vec_at(AutomotiveBus_Register_FlexRay_MetaFrame_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_FlexRay_MetaFrame_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_FlexRay_MetaFrame)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Register_FlexRay_MetaFrame, status, AutomotiveBus_Register_FlexRay_BufferStatus, AutomotiveBus_Register_FlexRay_BufferStatus_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(1, AutomotiveBus_Register_FlexRay_MetaFrame, direction, AutomotiveBus_Register_FlexRay_BufferDirection, AutomotiveBus_Register_FlexRay_BufferDirection_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(2, AutomotiveBus_Register_FlexRay_MetaFrame, channel_mask, flatbuffers_uint8, uint8_t, UINT8_C(1))
__flatbuffers_define_scalar_field(3, AutomotiveBus_Register_FlexRay_MetaFrame, cycle_period, flatbuffers_uint8, uint8_t, UINT8_C(1))
__flatbuffers_define_scalar_field(4, AutomotiveBus_Register_FlexRay_MetaFrame, cycle_offset, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_table_field(5, AutomotiveBus_Register_FlexRay_MetaFrame, frame, AutomotiveBus_Register_FlexRay_Frame_table_t, 0)
__flatbuffers_define_struct_field(6, AutomotiveBus_Register_FlexRay_MetaFrame, timing, AutomotiveBus_Register_FlexRay_MessageTiming_struct_t, 0)

/** 
 *     FlexRay Register File
 *     ===================== */
struct AutomotiveBus_Register_FlexRay_RegisterFile_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Register_FlexRay_RegisterFile_vec_len(AutomotiveBus_Register_FlexRay_RegisterFile_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Register_FlexRay_RegisterFile_table_t AutomotiveBus_Register_FlexRay_RegisterFile_vec_at(AutomotiveBus_Register_FlexRay_RegisterFile_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Register_FlexRay_RegisterFile_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Register_FlexRay_RegisterFile)

__flatbuffers_define_vector_field(0, AutomotiveBus_Register_FlexRay_RegisterFile, buffer, AutomotiveBus_Register_FlexRay_MetaFrame_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* FLEXRAY_READER_H */
