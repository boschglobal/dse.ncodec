#ifndef ETHERNET_BUILDER_H
#define ETHERNET_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef ETHERNET_READER_H
#include "ethernet_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "RIEN"
#undef flatbuffers_extension
#define flatbuffers_extension ".ethernet"

#define __AutomotiveBus_Register_Ethernet_BusSync_formal_args , AutomotiveBus_Register_Ethernet_BusSync_enum_t v0
#define __AutomotiveBus_Register_Ethernet_BusSync_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Ethernet_BusSync, AutomotiveBus_Register_Ethernet_BusSync_enum_t)
#define __AutomotiveBus_Register_Ethernet_BufferDirection_formal_args , AutomotiveBus_Register_Ethernet_BufferDirection_enum_t v0
#define __AutomotiveBus_Register_Ethernet_BufferDirection_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Ethernet_BufferDirection, AutomotiveBus_Register_Ethernet_BufferDirection_enum_t)
#define __AutomotiveBus_Register_Ethernet_BufferStatus_formal_args , AutomotiveBus_Register_Ethernet_BufferStatus_enum_t v0
#define __AutomotiveBus_Register_Ethernet_BufferStatus_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AutomotiveBus_Register_Ethernet_BufferStatus, AutomotiveBus_Register_Ethernet_BufferStatus_enum_t)

#define __AutomotiveBus_Register_Ethernet_TimeSpec_formal_args , int64_t v0
#define __AutomotiveBus_Register_Ethernet_TimeSpec_call_args , v0
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_assign(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, int64_t v0)
{ p->psec10 = v0;
  return p; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_copy(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, const AutomotiveBus_Register_Ethernet_TimeSpec_t *p2)
{ p->psec10 = p2->psec10;
  return p; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_assign_to_pe(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, int64_t v0)
{ flatbuffers_int64_assign_to_pe(&p->psec10, v0);
  return p; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_copy_to_pe(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, const AutomotiveBus_Register_Ethernet_TimeSpec_t *p2)
{ flatbuffers_int64_copy_to_pe(&p->psec10, &p2->psec10);
  return p; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_assign_from_pe(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, int64_t v0)
{ flatbuffers_int64_assign_from_pe(&p->psec10, v0);
  return p; }
static inline AutomotiveBus_Register_Ethernet_TimeSpec_t *AutomotiveBus_Register_Ethernet_TimeSpec_copy_from_pe(AutomotiveBus_Register_Ethernet_TimeSpec_t *p, const AutomotiveBus_Register_Ethernet_TimeSpec_t *p2)
{ flatbuffers_int64_copy_from_pe(&p->psec10, &p2->psec10);
  return p; }
__flatbuffers_build_struct(flatbuffers_, AutomotiveBus_Register_Ethernet_TimeSpec, 8, 8, AutomotiveBus_Register_Ethernet_TimeSpec_identifier, AutomotiveBus_Register_Ethernet_TimeSpec_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, AutomotiveBus_Register_Ethernet_TimeSpec, AutomotiveBus_Register_Ethernet_TimeSpec_t)

#define __AutomotiveBus_Register_Ethernet_MessageTiming_formal_args , int64_t v0, int64_t v1, int64_t v2
#define __AutomotiveBus_Register_Ethernet_MessageTiming_call_args , v0, v1, v2
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_assign(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, int64_t v0, int64_t v1, int64_t v2)
{ AutomotiveBus_Register_Ethernet_TimeSpec_assign(&p->send_request, v0); AutomotiveBus_Register_Ethernet_TimeSpec_assign(&p->arbitration, v1); AutomotiveBus_Register_Ethernet_TimeSpec_assign(&p->reception, v2);
  return p; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_copy(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, const AutomotiveBus_Register_Ethernet_MessageTiming_t *p2)
{ AutomotiveBus_Register_Ethernet_TimeSpec_copy(&p->send_request, &p2->send_request); AutomotiveBus_Register_Ethernet_TimeSpec_copy(&p->arbitration, &p2->arbitration); AutomotiveBus_Register_Ethernet_TimeSpec_copy(&p->reception, &p2->reception);
  return p; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_assign_to_pe(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, int64_t v0, int64_t v1, int64_t v2)
{ AutomotiveBus_Register_Ethernet_TimeSpec_assign_to_pe(&p->send_request, v0); AutomotiveBus_Register_Ethernet_TimeSpec_assign_to_pe(&p->arbitration, v1); AutomotiveBus_Register_Ethernet_TimeSpec_assign_to_pe(&p->reception, v2);
  return p; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_copy_to_pe(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, const AutomotiveBus_Register_Ethernet_MessageTiming_t *p2)
{ AutomotiveBus_Register_Ethernet_TimeSpec_copy_to_pe(&p->send_request, &p2->send_request); AutomotiveBus_Register_Ethernet_TimeSpec_copy_to_pe(&p->arbitration, &p2->arbitration); AutomotiveBus_Register_Ethernet_TimeSpec_copy_to_pe(&p->reception, &p2->reception);
  return p; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_assign_from_pe(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, int64_t v0, int64_t v1, int64_t v2)
{ AutomotiveBus_Register_Ethernet_TimeSpec_assign_from_pe(&p->send_request, v0); AutomotiveBus_Register_Ethernet_TimeSpec_assign_from_pe(&p->arbitration, v1); AutomotiveBus_Register_Ethernet_TimeSpec_assign_from_pe(&p->reception, v2);
  return p; }
static inline AutomotiveBus_Register_Ethernet_MessageTiming_t *AutomotiveBus_Register_Ethernet_MessageTiming_copy_from_pe(AutomotiveBus_Register_Ethernet_MessageTiming_t *p, const AutomotiveBus_Register_Ethernet_MessageTiming_t *p2)
{ AutomotiveBus_Register_Ethernet_TimeSpec_copy_from_pe(&p->send_request, &p2->send_request); AutomotiveBus_Register_Ethernet_TimeSpec_copy_from_pe(&p->arbitration, &p2->arbitration); AutomotiveBus_Register_Ethernet_TimeSpec_copy_from_pe(&p->reception, &p2->reception);
  return p; }
__flatbuffers_build_struct(flatbuffers_, AutomotiveBus_Register_Ethernet_MessageTiming, 24, 8, AutomotiveBus_Register_Ethernet_MessageTiming_identifier, AutomotiveBus_Register_Ethernet_MessageTiming_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, AutomotiveBus_Register_Ethernet_MessageTiming, AutomotiveBus_Register_Ethernet_MessageTiming_t)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Ethernet_EthernetStatus_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Ethernet_EthernetStatus_ref_t;
static AutomotiveBus_Register_Ethernet_EthernetStatus_ref_t AutomotiveBus_Register_Ethernet_EthernetStatus_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_EthernetStatus_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Ethernet_EthernetStatus, 1)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Ethernet_Frame_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Ethernet_Frame_ref_t;
static AutomotiveBus_Register_Ethernet_Frame_ref_t AutomotiveBus_Register_Ethernet_Frame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_Frame_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Ethernet_Frame, 6)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Ethernet_MetaFrame_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Ethernet_MetaFrame_ref_t;
static AutomotiveBus_Register_Ethernet_MetaFrame_ref_t AutomotiveBus_Register_Ethernet_MetaFrame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_MetaFrame_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Ethernet_MetaFrame, 4)

static const flatbuffers_voffset_t __AutomotiveBus_Register_Ethernet_RegisterFile_required[] = { 0 };
typedef flatbuffers_ref_t AutomotiveBus_Register_Ethernet_RegisterFile_ref_t;
static AutomotiveBus_Register_Ethernet_RegisterFile_ref_t AutomotiveBus_Register_Ethernet_RegisterFile_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_RegisterFile_table_t t);
__flatbuffers_build_table(flatbuffers_, AutomotiveBus_Register_Ethernet_RegisterFile, 1)

#define __AutomotiveBus_Register_Ethernet_EthernetStatus_formal_args , AutomotiveBus_Register_Ethernet_BusSync_enum_t v0
#define __AutomotiveBus_Register_Ethernet_EthernetStatus_call_args , v0
static inline AutomotiveBus_Register_Ethernet_EthernetStatus_ref_t AutomotiveBus_Register_Ethernet_EthernetStatus_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_EthernetStatus_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Ethernet_EthernetStatus, AutomotiveBus_Register_Ethernet_EthernetStatus_identifier, AutomotiveBus_Register_Ethernet_EthernetStatus_type_identifier)

#define __AutomotiveBus_Register_Ethernet_Frame_formal_args ,\
  flatbuffers_uint8_vec_ref_t v0, flatbuffers_uint8_vec_ref_t v1, uint64_t v2, uint16_t v3, flatbuffers_uint8_vec_ref_t v4, uint16_t v5
#define __AutomotiveBus_Register_Ethernet_Frame_call_args ,\
  v0, v1, v2, v3, v4, v5
static inline AutomotiveBus_Register_Ethernet_Frame_ref_t AutomotiveBus_Register_Ethernet_Frame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_Frame_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Ethernet_Frame, AutomotiveBus_Register_Ethernet_Frame_identifier, AutomotiveBus_Register_Ethernet_Frame_type_identifier)

#define __AutomotiveBus_Register_Ethernet_MetaFrame_formal_args , AutomotiveBus_Register_Ethernet_BufferStatus_enum_t v0, AutomotiveBus_Register_Ethernet_BufferDirection_enum_t v1, AutomotiveBus_Register_Ethernet_Frame_ref_t v2, AutomotiveBus_Register_Ethernet_MessageTiming_t *v3
#define __AutomotiveBus_Register_Ethernet_MetaFrame_call_args , v0, v1, v2, v3
static inline AutomotiveBus_Register_Ethernet_MetaFrame_ref_t AutomotiveBus_Register_Ethernet_MetaFrame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_MetaFrame_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Ethernet_MetaFrame, AutomotiveBus_Register_Ethernet_MetaFrame_identifier, AutomotiveBus_Register_Ethernet_MetaFrame_type_identifier)

#define __AutomotiveBus_Register_Ethernet_RegisterFile_formal_args , AutomotiveBus_Register_Ethernet_MetaFrame_vec_ref_t v0
#define __AutomotiveBus_Register_Ethernet_RegisterFile_call_args , v0
static inline AutomotiveBus_Register_Ethernet_RegisterFile_ref_t AutomotiveBus_Register_Ethernet_RegisterFile_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_RegisterFile_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AutomotiveBus_Register_Ethernet_RegisterFile, AutomotiveBus_Register_Ethernet_RegisterFile_identifier, AutomotiveBus_Register_Ethernet_RegisterFile_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, AutomotiveBus_Register_Ethernet_EthernetStatus_sync, AutomotiveBus_Register_Ethernet_BusSync, AutomotiveBus_Register_Ethernet_BusSync_enum_t, 1, 1, INT8_C(0), AutomotiveBus_Register_Ethernet_EthernetStatus)

static inline AutomotiveBus_Register_Ethernet_EthernetStatus_ref_t AutomotiveBus_Register_Ethernet_EthernetStatus_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_EthernetStatus_formal_args)
{
    if (AutomotiveBus_Register_Ethernet_EthernetStatus_start(B)
        || AutomotiveBus_Register_Ethernet_EthernetStatus_sync_add(B, v0)) {
        return 0;
    }
    return AutomotiveBus_Register_Ethernet_EthernetStatus_end(B);
}

static AutomotiveBus_Register_Ethernet_EthernetStatus_ref_t AutomotiveBus_Register_Ethernet_EthernetStatus_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_EthernetStatus_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Ethernet_EthernetStatus_start(B)
        || AutomotiveBus_Register_Ethernet_EthernetStatus_sync_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Ethernet_EthernetStatus_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, AutomotiveBus_Register_Ethernet_Frame_dest_mac, flatbuffers_uint8, uint8_t, AutomotiveBus_Register_Ethernet_Frame)
__flatbuffers_build_vector_field(1, flatbuffers_, AutomotiveBus_Register_Ethernet_Frame_src_mac, flatbuffers_uint8, uint8_t, AutomotiveBus_Register_Ethernet_Frame)
__flatbuffers_build_scalar_field(2, flatbuffers_, AutomotiveBus_Register_Ethernet_Frame_vlan_tag, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), AutomotiveBus_Register_Ethernet_Frame)
__flatbuffers_build_scalar_field(3, flatbuffers_, AutomotiveBus_Register_Ethernet_Frame_ether_type, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), AutomotiveBus_Register_Ethernet_Frame)
__flatbuffers_build_vector_field(4, flatbuffers_, AutomotiveBus_Register_Ethernet_Frame_data, flatbuffers_uint8, uint8_t, AutomotiveBus_Register_Ethernet_Frame)
__flatbuffers_build_scalar_field(5, flatbuffers_, AutomotiveBus_Register_Ethernet_Frame_length, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), AutomotiveBus_Register_Ethernet_Frame)

static inline AutomotiveBus_Register_Ethernet_Frame_ref_t AutomotiveBus_Register_Ethernet_Frame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_Frame_formal_args)
{
    if (AutomotiveBus_Register_Ethernet_Frame_start(B)
        || AutomotiveBus_Register_Ethernet_Frame_vlan_tag_add(B, v2)
        || AutomotiveBus_Register_Ethernet_Frame_dest_mac_add(B, v0)
        || AutomotiveBus_Register_Ethernet_Frame_src_mac_add(B, v1)
        || AutomotiveBus_Register_Ethernet_Frame_data_add(B, v4)
        || AutomotiveBus_Register_Ethernet_Frame_ether_type_add(B, v3)
        || AutomotiveBus_Register_Ethernet_Frame_length_add(B, v5)) {
        return 0;
    }
    return AutomotiveBus_Register_Ethernet_Frame_end(B);
}

static AutomotiveBus_Register_Ethernet_Frame_ref_t AutomotiveBus_Register_Ethernet_Frame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_Frame_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Ethernet_Frame_start(B)
        || AutomotiveBus_Register_Ethernet_Frame_vlan_tag_pick(B, t)
        || AutomotiveBus_Register_Ethernet_Frame_dest_mac_pick(B, t)
        || AutomotiveBus_Register_Ethernet_Frame_src_mac_pick(B, t)
        || AutomotiveBus_Register_Ethernet_Frame_data_pick(B, t)
        || AutomotiveBus_Register_Ethernet_Frame_ether_type_pick(B, t)
        || AutomotiveBus_Register_Ethernet_Frame_length_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Ethernet_Frame_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, AutomotiveBus_Register_Ethernet_MetaFrame_status, AutomotiveBus_Register_Ethernet_BufferStatus, AutomotiveBus_Register_Ethernet_BufferStatus_enum_t, 1, 1, INT8_C(0), AutomotiveBus_Register_Ethernet_MetaFrame)
__flatbuffers_build_scalar_field(1, flatbuffers_, AutomotiveBus_Register_Ethernet_MetaFrame_direction, AutomotiveBus_Register_Ethernet_BufferDirection, AutomotiveBus_Register_Ethernet_BufferDirection_enum_t, 1, 1, INT8_C(0), AutomotiveBus_Register_Ethernet_MetaFrame)
__flatbuffers_build_table_field(2, flatbuffers_, AutomotiveBus_Register_Ethernet_MetaFrame_frame, AutomotiveBus_Register_Ethernet_Frame, AutomotiveBus_Register_Ethernet_MetaFrame)
__flatbuffers_build_struct_field(3, flatbuffers_, AutomotiveBus_Register_Ethernet_MetaFrame_timing, AutomotiveBus_Register_Ethernet_MessageTiming, 24, 8, AutomotiveBus_Register_Ethernet_MetaFrame)

static inline AutomotiveBus_Register_Ethernet_MetaFrame_ref_t AutomotiveBus_Register_Ethernet_MetaFrame_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_MetaFrame_formal_args)
{
    if (AutomotiveBus_Register_Ethernet_MetaFrame_start(B)
        || AutomotiveBus_Register_Ethernet_MetaFrame_timing_add(B, v3)
        || AutomotiveBus_Register_Ethernet_MetaFrame_frame_add(B, v2)
        || AutomotiveBus_Register_Ethernet_MetaFrame_status_add(B, v0)
        || AutomotiveBus_Register_Ethernet_MetaFrame_direction_add(B, v1)) {
        return 0;
    }
    return AutomotiveBus_Register_Ethernet_MetaFrame_end(B);
}

static AutomotiveBus_Register_Ethernet_MetaFrame_ref_t AutomotiveBus_Register_Ethernet_MetaFrame_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_MetaFrame_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Ethernet_MetaFrame_start(B)
        || AutomotiveBus_Register_Ethernet_MetaFrame_timing_pick(B, t)
        || AutomotiveBus_Register_Ethernet_MetaFrame_frame_pick(B, t)
        || AutomotiveBus_Register_Ethernet_MetaFrame_status_pick(B, t)
        || AutomotiveBus_Register_Ethernet_MetaFrame_direction_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Ethernet_MetaFrame_end(B));
}

__flatbuffers_build_table_vector_field(0, flatbuffers_, AutomotiveBus_Register_Ethernet_RegisterFile_buffer, AutomotiveBus_Register_Ethernet_MetaFrame, AutomotiveBus_Register_Ethernet_RegisterFile)

static inline AutomotiveBus_Register_Ethernet_RegisterFile_ref_t AutomotiveBus_Register_Ethernet_RegisterFile_create(flatbuffers_builder_t *B __AutomotiveBus_Register_Ethernet_RegisterFile_formal_args)
{
    if (AutomotiveBus_Register_Ethernet_RegisterFile_start(B)
        || AutomotiveBus_Register_Ethernet_RegisterFile_buffer_add(B, v0)) {
        return 0;
    }
    return AutomotiveBus_Register_Ethernet_RegisterFile_end(B);
}

static AutomotiveBus_Register_Ethernet_RegisterFile_ref_t AutomotiveBus_Register_Ethernet_RegisterFile_clone(flatbuffers_builder_t *B, AutomotiveBus_Register_Ethernet_RegisterFile_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AutomotiveBus_Register_Ethernet_RegisterFile_start(B)
        || AutomotiveBus_Register_Ethernet_RegisterFile_buffer_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AutomotiveBus_Register_Ethernet_RegisterFile_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* ETHERNET_BUILDER_H */
