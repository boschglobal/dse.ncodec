#ifndef CHANNEL_READER_H
#define CHANNEL_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "SICH"
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct AutomotiveBus_Signal_Channel_SignalLookup_table *AutomotiveBus_Signal_Channel_SignalLookup_table_t;
typedef struct AutomotiveBus_Signal_Channel_SignalLookup_table *AutomotiveBus_Signal_Channel_SignalLookup_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalLookup_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalLookup_mutable_vec_t;
typedef const struct AutomotiveBus_Signal_Channel_SignalIndex_table *AutomotiveBus_Signal_Channel_SignalIndex_table_t;
typedef struct AutomotiveBus_Signal_Channel_SignalIndex_table *AutomotiveBus_Signal_Channel_SignalIndex_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalIndex_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalIndex_mutable_vec_t;
typedef const struct AutomotiveBus_Signal_Channel_SignalWrite_table *AutomotiveBus_Signal_Channel_SignalWrite_table_t;
typedef struct AutomotiveBus_Signal_Channel_SignalWrite_table *AutomotiveBus_Signal_Channel_SignalWrite_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalWrite_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalWrite_mutable_vec_t;
typedef const struct AutomotiveBus_Signal_Channel_SignalRead_table *AutomotiveBus_Signal_Channel_SignalRead_table_t;
typedef struct AutomotiveBus_Signal_Channel_SignalRead_table *AutomotiveBus_Signal_Channel_SignalRead_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalRead_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalRead_mutable_vec_t;
typedef const struct AutomotiveBus_Signal_Channel_SignalValue_table *AutomotiveBus_Signal_Channel_SignalValue_table_t;
typedef struct AutomotiveBus_Signal_Channel_SignalValue_table *AutomotiveBus_Signal_Channel_SignalValue_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalValue_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_SignalValue_mutable_vec_t;
typedef const struct AutomotiveBus_Signal_Channel_ChannelMessage_table *AutomotiveBus_Signal_Channel_ChannelMessage_table_t;
typedef struct AutomotiveBus_Signal_Channel_ChannelMessage_table *AutomotiveBus_Signal_Channel_ChannelMessage_mutable_table_t;
typedef const flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_ChannelMessage_vec_t;
typedef flatbuffers_uoffset_t *AutomotiveBus_Signal_Channel_ChannelMessage_mutable_vec_t;
#ifndef AutomotiveBus_Signal_Channel_SignalLookup_identifier
#define AutomotiveBus_Signal_Channel_SignalLookup_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Signal_Channel_SignalLookup_type_hash ((flatbuffers_thash_t)0x66731337)
#define AutomotiveBus_Signal_Channel_SignalLookup_type_identifier "\x37\x13\x73\x66"
#ifndef AutomotiveBus_Signal_Channel_SignalIndex_identifier
#define AutomotiveBus_Signal_Channel_SignalIndex_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Signal_Channel_SignalIndex_type_hash ((flatbuffers_thash_t)0x862806a7)
#define AutomotiveBus_Signal_Channel_SignalIndex_type_identifier "\xa7\x06\x28\x86"
#ifndef AutomotiveBus_Signal_Channel_SignalWrite_identifier
#define AutomotiveBus_Signal_Channel_SignalWrite_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Signal_Channel_SignalWrite_type_hash ((flatbuffers_thash_t)0x661b5398)
#define AutomotiveBus_Signal_Channel_SignalWrite_type_identifier "\x98\x53\x1b\x66"
#ifndef AutomotiveBus_Signal_Channel_SignalRead_identifier
#define AutomotiveBus_Signal_Channel_SignalRead_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Signal_Channel_SignalRead_type_hash ((flatbuffers_thash_t)0xbb972691)
#define AutomotiveBus_Signal_Channel_SignalRead_type_identifier "\x91\x26\x97\xbb"
#ifndef AutomotiveBus_Signal_Channel_SignalValue_identifier
#define AutomotiveBus_Signal_Channel_SignalValue_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Signal_Channel_SignalValue_type_hash ((flatbuffers_thash_t)0xaa286abe)
#define AutomotiveBus_Signal_Channel_SignalValue_type_identifier "\xbe\x6a\x28\xaa"
#ifndef AutomotiveBus_Signal_Channel_ChannelMessage_identifier
#define AutomotiveBus_Signal_Channel_ChannelMessage_identifier flatbuffers_identifier
#endif
#define AutomotiveBus_Signal_Channel_ChannelMessage_type_hash ((flatbuffers_thash_t)0x96ccd8b)
#define AutomotiveBus_Signal_Channel_ChannelMessage_type_identifier "\x8b\xcd\x6c\x09"



/** 
 *     Signal Indexing.
 *   */
struct AutomotiveBus_Signal_Channel_SignalLookup_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Signal_Channel_SignalLookup_vec_len(AutomotiveBus_Signal_Channel_SignalLookup_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Signal_Channel_SignalLookup_table_t AutomotiveBus_Signal_Channel_SignalLookup_vec_at(AutomotiveBus_Signal_Channel_SignalLookup_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Signal_Channel_SignalLookup_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Signal_Channel_SignalLookup)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Signal_Channel_SignalLookup, signal_uid, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_string_field(1, AutomotiveBus_Signal_Channel_SignalLookup, name, 0)

struct AutomotiveBus_Signal_Channel_SignalIndex_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Signal_Channel_SignalIndex_vec_len(AutomotiveBus_Signal_Channel_SignalIndex_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Signal_Channel_SignalIndex_table_t AutomotiveBus_Signal_Channel_SignalIndex_vec_at(AutomotiveBus_Signal_Channel_SignalIndex_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Signal_Channel_SignalIndex_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Signal_Channel_SignalIndex)

__flatbuffers_define_vector_field(0, AutomotiveBus_Signal_Channel_SignalIndex, indexes, AutomotiveBus_Signal_Channel_SignalLookup_vec_t, 0)

/** 
 *     Signal Messages.
 *     MsgPack encoded Signal Data:
 *         Data = [
 *             [0..N], // (uint) Signal UID
 *             [0..N], // (number) Signal Value - can be ommited for SignalRead.
 *         ]
 *     Signal Values can be encoded with any MsgPack numeric type (e.g. Integer
 *     or Float).
 *   */
struct AutomotiveBus_Signal_Channel_SignalWrite_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Signal_Channel_SignalWrite_vec_len(AutomotiveBus_Signal_Channel_SignalWrite_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Signal_Channel_SignalWrite_table_t AutomotiveBus_Signal_Channel_SignalWrite_vec_at(AutomotiveBus_Signal_Channel_SignalWrite_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Signal_Channel_SignalWrite_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Signal_Channel_SignalWrite)

__flatbuffers_define_vector_field(0, AutomotiveBus_Signal_Channel_SignalWrite, data, flatbuffers_uint8_vec_t, 0)

struct AutomotiveBus_Signal_Channel_SignalRead_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Signal_Channel_SignalRead_vec_len(AutomotiveBus_Signal_Channel_SignalRead_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Signal_Channel_SignalRead_table_t AutomotiveBus_Signal_Channel_SignalRead_vec_at(AutomotiveBus_Signal_Channel_SignalRead_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Signal_Channel_SignalRead_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Signal_Channel_SignalRead)

__flatbuffers_define_vector_field(0, AutomotiveBus_Signal_Channel_SignalRead, data, flatbuffers_uint8_vec_t, 0)

struct AutomotiveBus_Signal_Channel_SignalValue_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Signal_Channel_SignalValue_vec_len(AutomotiveBus_Signal_Channel_SignalValue_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Signal_Channel_SignalValue_table_t AutomotiveBus_Signal_Channel_SignalValue_vec_at(AutomotiveBus_Signal_Channel_SignalValue_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Signal_Channel_SignalValue_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Signal_Channel_SignalValue)

__flatbuffers_define_vector_field(0, AutomotiveBus_Signal_Channel_SignalValue, data, flatbuffers_uint8_vec_t, 0)
/** 
 *     Message Construction.
 *   */
typedef uint8_t AutomotiveBus_Signal_Channel_MessageType_union_type_t;
__flatbuffers_define_integer_type(AutomotiveBus_Signal_Channel_MessageType, AutomotiveBus_Signal_Channel_MessageType_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, AutomotiveBus_Signal_Channel_MessageType)
#define AutomotiveBus_Signal_Channel_MessageType_NONE ((AutomotiveBus_Signal_Channel_MessageType_union_type_t)UINT8_C(0))
#define AutomotiveBus_Signal_Channel_MessageType_SignalWrite ((AutomotiveBus_Signal_Channel_MessageType_union_type_t)UINT8_C(1))
#define AutomotiveBus_Signal_Channel_MessageType_SignalRead ((AutomotiveBus_Signal_Channel_MessageType_union_type_t)UINT8_C(2))
#define AutomotiveBus_Signal_Channel_MessageType_SignalValue ((AutomotiveBus_Signal_Channel_MessageType_union_type_t)UINT8_C(3))
#define AutomotiveBus_Signal_Channel_MessageType_SignalIndex ((AutomotiveBus_Signal_Channel_MessageType_union_type_t)UINT8_C(4))

static inline const char *AutomotiveBus_Signal_Channel_MessageType_type_name(AutomotiveBus_Signal_Channel_MessageType_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Signal_Channel_MessageType_NONE: return "NONE";
    case AutomotiveBus_Signal_Channel_MessageType_SignalWrite: return "SignalWrite";
    case AutomotiveBus_Signal_Channel_MessageType_SignalRead: return "SignalRead";
    case AutomotiveBus_Signal_Channel_MessageType_SignalValue: return "SignalValue";
    case AutomotiveBus_Signal_Channel_MessageType_SignalIndex: return "SignalIndex";
    default: return "";
    }
}

static inline int AutomotiveBus_Signal_Channel_MessageType_is_known_type(AutomotiveBus_Signal_Channel_MessageType_union_type_t type)
{
    switch (type) {
    case AutomotiveBus_Signal_Channel_MessageType_NONE: return 1;
    case AutomotiveBus_Signal_Channel_MessageType_SignalWrite: return 1;
    case AutomotiveBus_Signal_Channel_MessageType_SignalRead: return 1;
    case AutomotiveBus_Signal_Channel_MessageType_SignalValue: return 1;
    case AutomotiveBus_Signal_Channel_MessageType_SignalIndex: return 1;
    default: return 0;
    }
}


struct AutomotiveBus_Signal_Channel_ChannelMessage_table { uint8_t unused__; };

static inline size_t AutomotiveBus_Signal_Channel_ChannelMessage_vec_len(AutomotiveBus_Signal_Channel_ChannelMessage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline AutomotiveBus_Signal_Channel_ChannelMessage_table_t AutomotiveBus_Signal_Channel_ChannelMessage_vec_at(AutomotiveBus_Signal_Channel_ChannelMessage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(AutomotiveBus_Signal_Channel_ChannelMessage_table_t, vec, i, 0)
__flatbuffers_table_as_root(AutomotiveBus_Signal_Channel_ChannelMessage)

__flatbuffers_define_scalar_field(0, AutomotiveBus_Signal_Channel_ChannelMessage, model_uid, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_union_field(flatbuffers_, 2, AutomotiveBus_Signal_Channel_ChannelMessage, message, AutomotiveBus_Signal_Channel_MessageType, 0)
__flatbuffers_define_scalar_field(3, AutomotiveBus_Signal_Channel_ChannelMessage, control_code, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(4, AutomotiveBus_Signal_Channel_ChannelMessage, token, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(5, AutomotiveBus_Signal_Channel_ChannelMessage, rc, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_string_field(6, AutomotiveBus_Signal_Channel_ChannelMessage, response, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* CHANNEL_READER_H */
